// Button colors on hover
@mixin button-color-hover ($color, $opacity: 1, $lighten: 5%) {
	text-decoration: none;

	// Store the base color of this button
	$base-color: $color;

	// If two colors are specified
	@if (length($color) > 1) {
		$base-color: nth($color, 2); // Use the second one as the "base"

		background-color: transparent;
		background-image: linear-gradient(rgba(nth($color, 1), $opacity), rgba(nth($color, 2), $opacity));
	}
	// Solid background
	@else {
		background-color: rgba(lighten($base-color, $lighten), $opacity);
		background-image: none;
	}

	// Invert text color if button too bright
	@if ((lightness($base-color) > 75 and $opacity > .5) or (lightness($base-color) <= 75 and $opacity <= .5)) {
		color: $button-text-color-dark;
	}
	@else {
		color: $button-text-color;
	}

	// "Glow"? (shadow based on button color)
	@if ($button-glow == both or $button-glow == true) {
		box-shadow: 0 2px 32px rgba(lighten($base-color, 10%), .75);
	}
	@elseif ($button-glow != false and $button-glow != true) {
		box-shadow: $button-glow rgba(lighten($base-color, 10%), .75);
	}
	// Shadow?
	@elseif ($button-shadow == both or $button-shadow == true) {
		box-shadow: 0 50px 80px -40px rgba(0, 0, 0, .25), 0 25px 25px -20px rgba(0, 0, 0, .25);
	}
	@elseif ($button-shadow != false and $button-shadow != true) {
		box-shadow: $button-shadow;
	}
	@else {
		box-shadow: none;
	}
}

// Button colors and shadows etc
@mixin button-color ($color) {
	// Store the base color of this button
	$base-color: $color;

	// If two colors are specified
	@if (length($color) > 1) {
		$base-color: nth($color, 2); // Use the second one as the "base"

		background-color: transparent;
		background-image: linear-gradient(nth($color, 1), nth($color, 2));
		background-size: auto calc(100% + #{$button-border-width * 2});
		background-position: 50% -#{$button-border-width};

	}
	// Solid background
	@else {
		background-color: $base-color;
		background-image: none;
	}

	// Invert text color if button too bright
	@if (lightness($base-color) > 75) {
		color: $button-text-color-dark;

		// Potential link _inside_ a button (span.button > a)
		a,
		a:hover {
			color: $button-text-color-dark;
			text-decoration: none;
		}
	}
	@else {
		color: $button-text-color;

		// Potential link _inside_ a button (span.button > a)
		a,
		a:hover {
			color: $button-text-color;
			text-decoration: none;
		}
	}

	// Text shadow?
	@if ($button-text-shadow) {
		text-shadow: -1px -1px 0 darken($base-color, 10%);
	}
	@else {
		text-shadow: none;
	}

	// "Glow"? (Shadow based on button color)
	@if ($button-glow == both) {
		box-shadow: 0 2px 16px rgba(lighten($base-color, 10%), .75);
	}
	// Shadow?
	@elseif ($button-shadow == both) {
		box-shadow: 0 50px 80px -40px rgba(0, 0, 0, .25), 0 25px 25px -20px rgba(0, 0, 0, .25);
	}
	@elseif ($button-shadow != false and $button-shadow != true) {
		box-shadow: $button-shadow;
	}
	@else {
		box-shadow: none;
	}
}

// The actual button mixin (padding etc)
@mixin button ($color: $button-color, $hover: true) {
	@include button-color($color);

	// Hello
	display: inline-block;
	vertical-align: middle;
	transition: all $transition-slow $transition-easing, padding 0s 0s linear, border 0s 0s linear;

	// Size
	box-sizing: border-box;
	padding: $button-padding-vertical $button-padding-horizontal;

	// Font styling
	font-size: $button-font-size;
	font-weight: $button-font-weight;
	font-style: $button-font-style;

	line-height: $button-line-height;

	text-transform: $button-text-transform;
	text-decoration: none;
	text-align: center;

	@if ($button-font-family) {
		font-family: $button-font-family;
	}
	@if ($button-letter-spacing) {
		letter-spacing: $button-letter-spacing;
	}
	@else {
		letter-spacing: 0;
	}

	// Border and radius
	border: 0; // Buttons should never have borders in 2018 / Bane

	@if ($button-border-radius) {
		border-radius: $button-border-radius;
	}
	@else {
		border-radius: 0;
	}

	// Hover styling
	@if ($hover) {
		&:hover {
			@include button-color-hover($color);
		}
	}
}

// Turn a @button into a ghost button
@mixin button-ghost ($color: $button-color, $hover: true) {
	// Store the base color
	$base-color: $color;

	// If more than one color is specified - use the second one as the "base"
	@if (length($color) > 1) {
		$base-color: nth($color, 2);
	}

	// No background or shadow on ghosts
	background-color: transparent;
	background-image: none;
	text-shadow: none;
	box-shadow: 0 0 0 rgba(0, 0, 0, 0);

	// Text color should be same as background was
	color: $base-color;

	// Ghosts should always have a border
	border: $button-border-width $button-border-style $base-color;

	// We need to adjust their padding so they are same size as non-ghost buttons without border
	padding: calc(#{$button-padding-vertical} - #{$button-border-width}) calc(#{$button-padding-horizontal} - #{$button-border-width});

	@if ($hover) {
		&:hover {
			@include button-color-hover($color, $button-ghost-opacity, 0%);

			// NOTE: Wtf is this? It doesn't look good.
		/*	@if ($button-ghost-opacity == 1) {
				border-color: transparent;
			} */
		}
	}
}
