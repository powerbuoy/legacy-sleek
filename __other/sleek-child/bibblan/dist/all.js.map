{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/@glidejs/glide/dist/glide.js","node_modules/object-fit-images/dist/ofi.common-js.js","node_modules/sleek-map/sleek-map.js","node_modules/smooth-scroll/smooth-scroll.js","node_modules/toggle-hash/toggle-hash.js","src/js/all.js","src/js/cookie-consent.js","src/js/google-map.js","src/js/object-fit-polyfill.js","src/js/popup.js","src/js/slideshow.js","src/js/smooth-scroll.js","src/js/toggle-hash.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","global","factory","this","defaults","type","startAt","perView","focusAt","gap","autoplay","hoverpause","keyboard","bound","swipeThreshold","dragThreshold","perTouch","touchRatio","touchAngle","animationDuration","rewind","rewindDuration","animationTimingFunc","throttle","direction","peek","breakpoints","classes","ltr","rtl","slider","carousel","swipeable","dragging","cloneSlide","activeNav","activeSlide","disabledArrow","warn","msg","console","error","classCallCheck","instance","Constructor","TypeError","_typeof","Symbol","iterator","obj","constructor","prototype","createClass","protoProps","staticProps","defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_extends","assign","arguments","source","hasOwnProperty","toInt","value","parseInt","isString","isObject","isFunction","isUndefined","isArray","Array","define","prop","definition","mergeOptions","settings","options","EventsBus","event","handler","on","hop","events","index","push","remove","context","emit","forEach","item","undefined","Glide","extensions","_e","_c","glide","components","name","_name","mount","transformers","_t","pattern","Run","make","distance","Transition","disable","Move","interval","disabled","get","_o","set","_i","_d","status","selector","now","Date","getTime","func","wait","timeout","args","result","previous","later","leading","apply","throttled","at","remaining","clearTimeout","trailing","setTimeout","cancel","MARGIN_TYPE","siblings","node","parentNode","firstChild","matched","nextSibling","nodeType","exist","window","HTMLElement","TRACK_SELECTOR","EventsBinder","el","closure","capture","listeners","addEventListener","removeEventListener","VALID_DIRECTIONS","FLIPED_MOVEMENTS",">","<","=","Rtl","Components","modify","translate","Direction","is","mutator","Events","TRANSFORMERS","Gaps","Clones","grow","Peek","before","width","Sizes","slideWidth","concat","mutate","transformer","supportsPassive","opts","supportsPassive$1","START_EVENTS","MOVE_EVENTS","END_EVENTS","MOUSE_EVENTS","sortBreakpoints","points","keys","sort","reduce","k","sortKeys","COMPONENTS","Html","root","track","querySelector","slides","slice","wrapper","children","filter","slide","classList","contains","_r","document","Translate","transform","style","isType","isOffset","after","movement","compose","property","duration","transition","callback","enable","offset","resolve","token","split","join","addClass","add","removeClass","_v","indexOf","setupSlides","setupWrapper","dimention","wrapperSize","offsetWidth","reductor","len","marginLeft","marginRight","_this","items","collect","_Glide$settings","part","start","end","Math","max","floor","clone","cloneNode","_clone","unshift","append","_Components$Html","half","prepend","reverse","appendChild","_i2","insertBefore","_i3","removeChild","Resize","Binder","bind","unbind","off","destroy","Build","typeClass","activeClass","sibling","removeClasses","move","calculate","isStart","isEnd","steps","countableSteps","isNumber","min","_m","step","substr","Swipe","swipeSin","swipeStartX","swipeStartY","passive","bindSwipeStart","swipe","touches","pageX","pageY","bindSwipeMove","bindSwipeEnd","subExSx","subEySy","powEX","abs","powEY","swipeHypotenuse","sqrt","swipeCathetus","asin","PI","stopPropagation","parseFloat","toFloat","threshold","swipeDistance","swipeDeg","round","unbindSwipeMove","unbindSwipeEnd","unbindSwipeStart","_this2","_this3","changedTouches","Images","dragstart","preventDefault","Anchors","detached","prevented","_a","querySelectorAll","click","detach","draggable","setAttribute","getAttribute","removeAttribute","attach","Controls","_n","addBindings","setActive","removeActive","controls","removeBindings","elements","currentTarget","Keyboard","press","keyCode","Autoplay","setInterval","stop","time","clearInterval","Breakpoints","match","matchMedia","point","matches","Glide$$1","self","ReferenceError","possibleConstructorReturn","__proto__","getPrototypeOf","subClass","superClass","create","setPrototypeOf","inherits","object","receiver","Function","desc","getOwnPropertyDescriptor","parent","getter","amd","OFI","propRegex","testImg","Image","object-position","supportsObjectFit","supportsObjectPosition","supportsOFI","supportsCurrentSrc","currentSrc","nativeGetAttribute","nativeSetAttribute","autoModeEnabled","setPlaceholder","img","height","placeholder","w","h","createPlaceholder","onImageReady","naturalWidth","fixOne","parsed","getComputedStyle","fontFamily","exec","getStyle","ofi","skipTest","srcset","src","naturalHeight","descriptors","ss","keepSrcUsable","err","picturefill","pf","_","ns","evaled","fillImg","reselect","curSrc","supported","polyfillCurrentSrc","backgroundImage","replace","backgroundPosition","backgroundRepeat","backgroundOrigin","test","backgroundSize","fix","imgs","startAutoMode","getElementsByTagName","body","tagName","watchMQ","getOfiImageMaybe","HTMLImageElement","String","SleekMap","mapEl","config","markers","kmlLayers","infoWindow","google","maps","InfoWindow","markerBounds","LatLngBounds","mapOptions","zoom","scrollWheel","center","lat","lng","mapTypeControl","streetViewControl","styles","firstMapType","mapTypes","mapTypeId","mapTypeIds","mapTypeControlOptions","map","Map","StyledMapType","setMapTypeId","geolocation","addGeolocation","addMarkers","addKmlLayers","geolocationControl","createElement","geolocationMarker","panTo","getPosition","watchPosition","ControlPosition","RIGHT_BOTTOM","geolocationId","navigator","position","updateGeolocationMarker","coords","latitude","longitude","accuracy","addGeolocationMarker","maximumAge","enableHighAccuracy","radius","Marker","icon","path","SymbolPath","CIRCLE","scale","fillColor","fillOpacity","strokeColor","strokeOpacity","strokeWeight","geolocationAccuracy","Circle","setPosition","setCenter","setRadius","marker","url","size","scaledSize","anchor","x","y","defaultIconSize","gMarker","customProperties","addListener","setContent","open","extend","fitBounds","layers","layer","kmlLayer","KmlLayer","getDefaultViewport","parseMapEl","mapStyles","dataset","JSON","parse","innerHTML","jQuery","$","fn","smoothScroll","conf","each","trigger","href","attr","targetId","getElementById","targetBCT","getBoundingClientRect","st","scrollTop","location","hash","animate","top","toggleHash","onAdd","onRemove","clickedHash","history","replaceState","title","pathname","search","SLEEK_COOKIE_CONSENT","localStorage","getItem","id","setItem","gmInit","SLEEK_CONFIG","GOOGLE_MAPS_API_KEY","sleekMap","log","pushState","closePopups","clicked","popupId","templateId","find","html","numCols","gallery","colClass","val","wrapInner","wrap","perPage","data","outer","appendTo","nav","tText","text","ttText","hasText","documentElement"],"mappings":"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","file":"all.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","/*!\n * Glide.js v3.3.0\n * (c) 2013-2019 Jędrzej Chałubek <jedrzej.chalubek@gmail.com> (http://jedrzejchalubek.com/)\n * Released under the MIT License.\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global.Glide = factory());\n}(this, (function () { 'use strict';\n\n  var defaults = {\n    /**\n     * Type of the movement.\n     *\n     * Available types:\n     * `slider` - Rewinds slider to the start/end when it reaches the first or last slide.\n     * `carousel` - Changes slides without starting over when it reaches the first or last slide.\n     *\n     * @type {String}\n     */\n    type: 'slider',\n\n    /**\n     * Start at specific slide number defined with zero-based index.\n     *\n     * @type {Number}\n     */\n    startAt: 0,\n\n    /**\n     * A number of slides visible on the single viewport.\n     *\n     * @type {Number}\n     */\n    perView: 1,\n\n    /**\n     * Focus currently active slide at a specified position in the track.\n     *\n     * Available inputs:\n     * `center` - Current slide will be always focused at the center of a track.\n     * `0,1,2,3...` - Current slide will be focused on the specified zero-based index.\n     *\n     * @type {String|Number}\n     */\n    focusAt: 0,\n\n    /**\n     * A size of the gap added between slides.\n     *\n     * @type {Number}\n     */\n    gap: 10,\n\n    /**\n     * Change slides after a specified interval. Use `false` for turning off autoplay.\n     *\n     * @type {Number|Boolean}\n     */\n    autoplay: false,\n\n    /**\n     * Stop autoplay on mouseover event.\n     *\n     * @type {Boolean}\n     */\n    hoverpause: true,\n\n    /**\n     * Allow for changing slides with left and right keyboard arrows.\n     *\n     * @type {Boolean}\n     */\n    keyboard: true,\n\n    /**\n     * Stop running `perView` number of slides from the end. Use this\n     * option if you don't want to have an empty space after\n     * a slider. Works only with `slider` type and a\n     * non-centered `focusAt` setting.\n     *\n     * @type {Boolean}\n     */\n    bound: false,\n\n    /**\n     * Minimal swipe distance needed to change the slide. Use `false` for turning off a swiping.\n     *\n     * @type {Number|Boolean}\n     */\n    swipeThreshold: 80,\n\n    /**\n     * Minimal mouse drag distance needed to change the slide. Use `false` for turning off a dragging.\n     *\n     * @type {Number|Boolean}\n     */\n    dragThreshold: 120,\n\n    /**\n     * A maximum number of slides to which movement will be made on swiping or dragging. Use `false` for unlimited.\n     *\n     * @type {Number|Boolean}\n     */\n    perTouch: false,\n\n    /**\n     * Moving distance ratio of the slides on a swiping and dragging.\n     *\n     * @type {Number}\n     */\n    touchRatio: 0.5,\n\n    /**\n     * Angle required to activate slides moving on swiping or dragging.\n     *\n     * @type {Number}\n     */\n    touchAngle: 45,\n\n    /**\n     * Duration of the animation in milliseconds.\n     *\n     * @type {Number}\n     */\n    animationDuration: 400,\n\n    /**\n     * Allows looping the `slider` type. Slider will rewind to the first/last slide when it's at the start/end.\n     *\n     * @type {Boolean}\n     */\n    rewind: true,\n\n    /**\n     * Duration of the rewinding animation of the `slider` type in milliseconds.\n     *\n     * @type {Number}\n     */\n    rewindDuration: 800,\n\n    /**\n     * Easing function for the animation.\n     *\n     * @type {String}\n     */\n    animationTimingFunc: 'cubic-bezier(.165, .840, .440, 1)',\n\n    /**\n     * Throttle costly events at most once per every wait milliseconds.\n     *\n     * @type {Number}\n     */\n    throttle: 10,\n\n    /**\n     * Moving direction mode.\n     *\n     * Available inputs:\n     * - 'ltr' - left to right movement,\n     * - 'rtl' - right to left movement.\n     *\n     * @type {String}\n     */\n    direction: 'ltr',\n\n    /**\n     * The distance value of the next and previous viewports which\n     * have to peek in the current view. Accepts number and\n     * pixels as a string. Left and right peeking can be\n     * set up separately with a directions object.\n     *\n     * For example:\n     * `100` - Peek 100px on the both sides.\n     * { before: 100, after: 50 }` - Peek 100px on the left side and 50px on the right side.\n     *\n     * @type {Number|String|Object}\n     */\n    peek: 0,\n\n    /**\n     * Collection of options applied at specified media breakpoints.\n     * For example: display two slides per view under 800px.\n     * `{\n     *   '800px': {\n     *     perView: 2\n     *   }\n     * }`\n     */\n    breakpoints: {},\n\n    /**\n     * Collection of internally used HTML classes.\n     *\n     * @todo Refactor `slider` and `carousel` properties to single `type: { slider: '', carousel: '' }` object\n     * @type {Object}\n     */\n    classes: {\n      direction: {\n        ltr: 'glide--ltr',\n        rtl: 'glide--rtl'\n      },\n      slider: 'glide--slider',\n      carousel: 'glide--carousel',\n      swipeable: 'glide--swipeable',\n      dragging: 'glide--dragging',\n      cloneSlide: 'glide__slide--clone',\n      activeNav: 'glide__bullet--active',\n      activeSlide: 'glide__slide--active',\n      disabledArrow: 'glide__arrow--disabled'\n    }\n  };\n\n  /**\n   * Outputs warning message to the bowser console.\n   *\n   * @param  {String} msg\n   * @return {Void}\n   */\n  function warn(msg) {\n    console.error(\"[Glide warn]: \" + msg);\n  }\n\n  var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  };\n\n  var classCallCheck = function (instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  };\n\n  var createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n\n  var _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  var get = function get(object, property, receiver) {\n    if (object === null) object = Function.prototype;\n    var desc = Object.getOwnPropertyDescriptor(object, property);\n\n    if (desc === undefined) {\n      var parent = Object.getPrototypeOf(object);\n\n      if (parent === null) {\n        return undefined;\n      } else {\n        return get(parent, property, receiver);\n      }\n    } else if (\"value\" in desc) {\n      return desc.value;\n    } else {\n      var getter = desc.get;\n\n      if (getter === undefined) {\n        return undefined;\n      }\n\n      return getter.call(receiver);\n    }\n  };\n\n  var inherits = function (subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n  };\n\n  var possibleConstructorReturn = function (self, call) {\n    if (!self) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n  };\n\n  /**\n   * Converts value entered as number\n   * or string to integer value.\n   *\n   * @param {String} value\n   * @returns {Number}\n   */\n  function toInt(value) {\n    return parseInt(value);\n  }\n\n  /**\n   * Converts value entered as number\n   * or string to flat value.\n   *\n   * @param {String} value\n   * @returns {Number}\n   */\n  function toFloat(value) {\n    return parseFloat(value);\n  }\n\n  /**\n   * Indicates whether the specified value is a string.\n   *\n   * @param  {*}   value\n   * @return {Boolean}\n   */\n  function isString(value) {\n    return typeof value === 'string';\n  }\n\n  /**\n   * Indicates whether the specified value is an object.\n   *\n   * @param  {*} value\n   * @return {Boolean}\n   *\n   * @see https://github.com/jashkenas/underscore\n   */\n  function isObject(value) {\n    var type = typeof value === 'undefined' ? 'undefined' : _typeof(value);\n\n    return type === 'function' || type === 'object' && !!value; // eslint-disable-line no-mixed-operators\n  }\n\n  /**\n   * Indicates whether the specified value is a number.\n   *\n   * @param  {*} value\n   * @return {Boolean}\n   */\n  function isNumber(value) {\n    return typeof value === 'number';\n  }\n\n  /**\n   * Indicates whether the specified value is a function.\n   *\n   * @param  {*} value\n   * @return {Boolean}\n   */\n  function isFunction(value) {\n    return typeof value === 'function';\n  }\n\n  /**\n   * Indicates whether the specified value is undefined.\n   *\n   * @param  {*} value\n   * @return {Boolean}\n   */\n  function isUndefined(value) {\n    return typeof value === 'undefined';\n  }\n\n  /**\n   * Indicates whether the specified value is an array.\n   *\n   * @param  {*} value\n   * @return {Boolean}\n   */\n  function isArray(value) {\n    return value.constructor === Array;\n  }\n\n  /**\n   * Creates and initializes specified collection of extensions.\n   * Each extension receives access to instance of glide and rest of components.\n   *\n   * @param {Object} glide\n   * @param {Object} extensions\n   *\n   * @returns {Object}\n   */\n  function mount(glide, extensions, events) {\n    var components = {};\n\n    for (var name in extensions) {\n      if (isFunction(extensions[name])) {\n        components[name] = extensions[name](glide, components, events);\n      } else {\n        warn('Extension must be a function');\n      }\n    }\n\n    for (var _name in components) {\n      if (isFunction(components[_name].mount)) {\n        components[_name].mount();\n      }\n    }\n\n    return components;\n  }\n\n  /**\n   * Defines getter and setter property on the specified object.\n   *\n   * @param  {Object} obj         Object where property has to be defined.\n   * @param  {String} prop        Name of the defined property.\n   * @param  {Object} definition  Get and set definitions for the property.\n   * @return {Void}\n   */\n  function define(obj, prop, definition) {\n    Object.defineProperty(obj, prop, definition);\n  }\n\n  /**\n   * Sorts aphabetically object keys.\n   *\n   * @param  {Object} obj\n   * @return {Object}\n   */\n  function sortKeys(obj) {\n    return Object.keys(obj).sort().reduce(function (r, k) {\n      r[k] = obj[k];\n\n      return r[k], r;\n    }, {});\n  }\n\n  /**\n   * Merges passed settings object with default options.\n   *\n   * @param  {Object} defaults\n   * @param  {Object} settings\n   * @return {Object}\n   */\n  function mergeOptions(defaults, settings) {\n    var options = _extends({}, defaults, settings);\n\n    // `Object.assign` do not deeply merge objects, so we\n    // have to do it manually for every nested object\n    // in options. Although it does not look smart,\n    // it's smaller and faster than some fancy\n    // merging deep-merge algorithm script.\n    if (settings.hasOwnProperty('classes')) {\n      options.classes = _extends({}, defaults.classes, settings.classes);\n\n      if (settings.classes.hasOwnProperty('direction')) {\n        options.classes.direction = _extends({}, defaults.classes.direction, settings.classes.direction);\n      }\n    }\n\n    if (settings.hasOwnProperty('breakpoints')) {\n      options.breakpoints = _extends({}, defaults.breakpoints, settings.breakpoints);\n    }\n\n    return options;\n  }\n\n  var EventsBus = function () {\n    /**\n     * Construct a EventBus instance.\n     *\n     * @param {Object} events\n     */\n    function EventsBus() {\n      var events = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      classCallCheck(this, EventsBus);\n\n      this.events = events;\n      this.hop = events.hasOwnProperty;\n    }\n\n    /**\n     * Adds listener to the specifed event.\n     *\n     * @param {String|Array} event\n     * @param {Function} handler\n     */\n\n\n    createClass(EventsBus, [{\n      key: 'on',\n      value: function on(event, handler) {\n        if (isArray(event)) {\n          for (var i = 0; i < event.length; i++) {\n            this.on(event[i], handler);\n          }\n        }\n\n        // Create the event's object if not yet created\n        if (!this.hop.call(this.events, event)) {\n          this.events[event] = [];\n        }\n\n        // Add the handler to queue\n        var index = this.events[event].push(handler) - 1;\n\n        // Provide handle back for removal of event\n        return {\n          remove: function remove() {\n            delete this.events[event][index];\n          }\n        };\n      }\n\n      /**\n       * Runs registered handlers for specified event.\n       *\n       * @param {String|Array} event\n       * @param {Object=} context\n       */\n\n    }, {\n      key: 'emit',\n      value: function emit(event, context) {\n        if (isArray(event)) {\n          for (var i = 0; i < event.length; i++) {\n            this.emit(event[i], context);\n          }\n        }\n\n        // If the event doesn't exist, or there's no handlers in queue, just leave\n        if (!this.hop.call(this.events, event)) {\n          return;\n        }\n\n        // Cycle through events queue, fire!\n        this.events[event].forEach(function (item) {\n          item(context || {});\n        });\n      }\n    }]);\n    return EventsBus;\n  }();\n\n  var Glide = function () {\n    /**\r\n     * Construct glide.\r\n     *\r\n     * @param  {String} selector\r\n     * @param  {Object} options\r\n     */\n    function Glide(selector) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      classCallCheck(this, Glide);\n\n      this._c = {};\n      this._t = [];\n      this._e = new EventsBus();\n\n      this.disabled = false;\n      this.selector = selector;\n      this.settings = mergeOptions(defaults, options);\n      this.index = this.settings.startAt;\n    }\n\n    /**\r\n     * Initializes glide.\r\n     *\r\n     * @param {Object} extensions Collection of extensions to initialize.\r\n     * @return {Glide}\r\n     */\n\n\n    createClass(Glide, [{\n      key: 'mount',\n      value: function mount$$1() {\n        var extensions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n        this._e.emit('mount.before');\n\n        if (isObject(extensions)) {\n          this._c = mount(this, extensions, this._e);\n        } else {\n          warn('You need to provide a object on `mount()`');\n        }\n\n        this._e.emit('mount.after');\n\n        return this;\n      }\n\n      /**\r\n       * Collects an instance `translate` transformers.\r\n       *\r\n       * @param  {Array} transformers Collection of transformers.\r\n       * @return {Void}\r\n       */\n\n    }, {\n      key: 'mutate',\n      value: function mutate() {\n        var transformers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n        if (isArray(transformers)) {\n          this._t = transformers;\n        } else {\n          warn('You need to provide a array on `mutate()`');\n        }\n\n        return this;\n      }\n\n      /**\r\n       * Updates glide with specified settings.\r\n       *\r\n       * @param {Object} settings\r\n       * @return {Glide}\r\n       */\n\n    }, {\n      key: 'update',\n      value: function update() {\n        var settings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n        this.settings = mergeOptions(this.settings, settings);\n\n        if (settings.hasOwnProperty('startAt')) {\n          this.index = settings.startAt;\n        }\n\n        this._e.emit('update');\n\n        return this;\n      }\n\n      /**\r\n       * Change slide with specified pattern. A pattern must be in the special format:\r\n       * `>` - Move one forward\r\n       * `<` - Move one backward\r\n       * `={i}` - Go to {i} zero-based slide (eq. '=1', will go to second slide)\r\n       * `>>` - Rewinds to end (last slide)\r\n       * `<<` - Rewinds to start (first slide)\r\n       *\r\n       * @param {String} pattern\r\n       * @return {Glide}\r\n       */\n\n    }, {\n      key: 'go',\n      value: function go(pattern) {\n        this._c.Run.make(pattern);\n\n        return this;\n      }\n\n      /**\r\n       * Move track by specified distance.\r\n       *\r\n       * @param {String} distance\r\n       * @return {Glide}\r\n       */\n\n    }, {\n      key: 'move',\n      value: function move(distance) {\n        this._c.Transition.disable();\n        this._c.Move.make(distance);\n\n        return this;\n      }\n\n      /**\r\n       * Destroy instance and revert all changes done by this._c.\r\n       *\r\n       * @return {Glide}\r\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this._e.emit('destroy');\n\n        return this;\n      }\n\n      /**\r\n       * Start instance autoplaying.\r\n       *\r\n       * @param {Boolean|Number} interval Run autoplaying with passed interval regardless of `autoplay` settings\r\n       * @return {Glide}\r\n       */\n\n    }, {\n      key: 'play',\n      value: function play() {\n        var interval = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n        if (interval) {\n          this.settings.autoplay = interval;\n        }\n\n        this._e.emit('play');\n\n        return this;\n      }\n\n      /**\r\n       * Stop instance autoplaying.\r\n       *\r\n       * @return {Glide}\r\n       */\n\n    }, {\n      key: 'pause',\n      value: function pause() {\n        this._e.emit('pause');\n\n        return this;\n      }\n\n      /**\r\n       * Sets glide into a idle status.\r\n       *\r\n       * @return {Glide}\r\n       */\n\n    }, {\n      key: 'disable',\n      value: function disable() {\n        this.disabled = true;\n\n        return this;\n      }\n\n      /**\r\n       * Sets glide into a active status.\r\n       *\r\n       * @return {Glide}\r\n       */\n\n    }, {\n      key: 'enable',\n      value: function enable() {\n        this.disabled = false;\n\n        return this;\n      }\n\n      /**\r\n       * Adds cuutom event listener with handler.\r\n       *\r\n       * @param  {String|Array} event\r\n       * @param  {Function} handler\r\n       * @return {Glide}\r\n       */\n\n    }, {\n      key: 'on',\n      value: function on(event, handler) {\n        this._e.on(event, handler);\n\n        return this;\n      }\n\n      /**\r\n       * Checks if glide is a precised type.\r\n       *\r\n       * @param  {String} name\r\n       * @return {Boolean}\r\n       */\n\n    }, {\n      key: 'isType',\n      value: function isType(name) {\n        return this.settings.type === name;\n      }\n\n      /**\r\n       * Gets value of the core options.\r\n       *\r\n       * @return {Object}\r\n       */\n\n    }, {\n      key: 'settings',\n      get: function get$$1() {\n        return this._o;\n      }\n\n      /**\r\n       * Sets value of the core options.\r\n       *\r\n       * @param  {Object} o\r\n       * @return {Void}\r\n       */\n      ,\n      set: function set$$1(o) {\n        if (isObject(o)) {\n          this._o = o;\n        } else {\n          warn('Options must be an `object` instance.');\n        }\n      }\n\n      /**\r\n       * Gets current index of the slider.\r\n       *\r\n       * @return {Object}\r\n       */\n\n    }, {\n      key: 'index',\n      get: function get$$1() {\n        return this._i;\n      }\n\n      /**\r\n       * Sets current index a slider.\r\n       *\r\n       * @return {Object}\r\n       */\n      ,\n      set: function set$$1(i) {\n        this._i = toInt(i);\n      }\n\n      /**\r\n       * Gets type name of the slider.\r\n       *\r\n       * @return {String}\r\n       */\n\n    }, {\n      key: 'type',\n      get: function get$$1() {\n        return this.settings.type;\n      }\n\n      /**\r\n       * Gets value of the idle status.\r\n       *\r\n       * @return {Boolean}\r\n       */\n\n    }, {\n      key: 'disabled',\n      get: function get$$1() {\n        return this._d;\n      }\n\n      /**\r\n       * Sets value of the idle status.\r\n       *\r\n       * @return {Boolean}\r\n       */\n      ,\n      set: function set$$1(status) {\n        this._d = !!status;\n      }\n    }]);\n    return Glide;\n  }();\n\n  function Run (Glide, Components, Events) {\n    var Run = {\n      /**\n       * Initializes autorunning of the glide.\n       *\n       * @return {Void}\n       */\n      mount: function mount() {\n        this._o = false;\n      },\n\n\n      /**\n       * Makes glides running based on the passed moving schema.\n       *\n       * @param {String} move\n       */\n      make: function make(move) {\n        var _this = this;\n\n        if (!Glide.disabled) {\n          Glide.disable();\n\n          this.move = move;\n\n          Events.emit('run.before', this.move);\n\n          this.calculate();\n\n          Events.emit('run', this.move);\n\n          Components.Transition.after(function () {\n            if (_this.isStart()) {\n              Events.emit('run.start', _this.move);\n            }\n\n            if (_this.isEnd()) {\n              Events.emit('run.end', _this.move);\n            }\n\n            if (_this.isOffset('<') || _this.isOffset('>')) {\n              _this._o = false;\n\n              Events.emit('run.offset', _this.move);\n            }\n\n            Events.emit('run.after', _this.move);\n\n            Glide.enable();\n          });\n        }\n      },\n\n\n      /**\n       * Calculates current index based on defined move.\n       *\n       * @return {Void}\n       */\n      calculate: function calculate() {\n        var move = this.move,\n            length = this.length;\n        var steps = move.steps,\n            direction = move.direction;\n\n\n        var countableSteps = isNumber(toInt(steps)) && toInt(steps) !== 0;\n\n        switch (direction) {\n          case '>':\n            if (steps === '>') {\n              Glide.index = length;\n            } else if (this.isEnd()) {\n              if (!(Glide.isType('slider') && !Glide.settings.rewind)) {\n                this._o = true;\n\n                Glide.index = 0;\n              }\n            } else if (countableSteps) {\n              Glide.index += Math.min(length - Glide.index, -toInt(steps));\n            } else {\n              Glide.index++;\n            }\n            break;\n\n          case '<':\n            if (steps === '<') {\n              Glide.index = 0;\n            } else if (this.isStart()) {\n              if (!(Glide.isType('slider') && !Glide.settings.rewind)) {\n                this._o = true;\n\n                Glide.index = length;\n              }\n            } else if (countableSteps) {\n              Glide.index -= Math.min(Glide.index, toInt(steps));\n            } else {\n              Glide.index--;\n            }\n            break;\n\n          case '=':\n            Glide.index = steps;\n            break;\n\n          default:\n            warn('Invalid direction pattern [' + direction + steps + '] has been used');\n            break;\n        }\n      },\n\n\n      /**\n       * Checks if we are on the first slide.\n       *\n       * @return {Boolean}\n       */\n      isStart: function isStart() {\n        return Glide.index === 0;\n      },\n\n\n      /**\n       * Checks if we are on the last slide.\n       *\n       * @return {Boolean}\n       */\n      isEnd: function isEnd() {\n        return Glide.index === this.length;\n      },\n\n\n      /**\n       * Checks if we are making a offset run.\n       *\n       * @param {String} direction\n       * @return {Boolean}\n       */\n      isOffset: function isOffset(direction) {\n        return this._o && this.move.direction === direction;\n      }\n    };\n\n    define(Run, 'move', {\n      /**\n       * Gets value of the move schema.\n       *\n       * @returns {Object}\n       */\n      get: function get() {\n        return this._m;\n      },\n\n\n      /**\n       * Sets value of the move schema.\n       *\n       * @returns {Object}\n       */\n      set: function set(value) {\n        var step = value.substr(1);\n\n        this._m = {\n          direction: value.substr(0, 1),\n          steps: step ? toInt(step) ? toInt(step) : step : 0\n        };\n      }\n    });\n\n    define(Run, 'length', {\n      /**\n       * Gets value of the running distance based\n       * on zero-indexing number of slides.\n       *\n       * @return {Number}\n       */\n      get: function get() {\n        var settings = Glide.settings;\n        var length = Components.Html.slides.length;\n\n        // If the `bound` option is acitve, a maximum running distance should be\n        // reduced by `perView` and `focusAt` settings. Running distance\n        // should end before creating an empty space after instance.\n\n        if (Glide.isType('slider') && settings.focusAt !== 'center' && settings.bound) {\n          return length - 1 - (toInt(settings.perView) - 1) + toInt(settings.focusAt);\n        }\n\n        return length - 1;\n      }\n    });\n\n    define(Run, 'offset', {\n      /**\n       * Gets status of the offsetting flag.\n       *\n       * @return {Boolean}\n       */\n      get: function get() {\n        return this._o;\n      }\n    });\n\n    return Run;\n  }\n\n  /**\n   * Returns a current time.\n   *\n   * @return {Number}\n   */\n  function now() {\n    return new Date().getTime();\n  }\n\n  /**\n   * Returns a function, that, when invoked, will only be triggered\n   * at most once during a given window of time.\n   *\n   * @param {Function} func\n   * @param {Number} wait\n   * @param {Object=} options\n   * @return {Function}\n   *\n   * @see https://github.com/jashkenas/underscore\n   */\n  function throttle(func, wait, options) {\n    var timeout = void 0,\n        context = void 0,\n        args = void 0,\n        result = void 0;\n    var previous = 0;\n    if (!options) options = {};\n\n    var later = function later() {\n      previous = options.leading === false ? 0 : now();\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    };\n\n    var throttled = function throttled() {\n      var at = now();\n      if (!previous && options.leading === false) previous = at;\n      var remaining = wait - (at - previous);\n      context = this;\n      args = arguments;\n      if (remaining <= 0 || remaining > wait) {\n        if (timeout) {\n          clearTimeout(timeout);\n          timeout = null;\n        }\n        previous = at;\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      } else if (!timeout && options.trailing !== false) {\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n\n    throttled.cancel = function () {\n      clearTimeout(timeout);\n      previous = 0;\n      timeout = context = args = null;\n    };\n\n    return throttled;\n  }\n\n  var MARGIN_TYPE = {\n    ltr: ['marginLeft', 'marginRight'],\n    rtl: ['marginRight', 'marginLeft']\n  };\n\n  function Gaps (Glide, Components, Events) {\n    var Gaps = {\n      /**\n       * Applies gaps between slides. First and last\n       * slides do not receive it's edge margins.\n       *\n       * @param {HTMLCollection} slides\n       * @return {Void}\n       */\n      apply: function apply(slides) {\n        for (var i = 0, len = slides.length; i < len; i++) {\n          var style = slides[i].style;\n          var direction = Components.Direction.value;\n\n          if (i !== 0) {\n            style[MARGIN_TYPE[direction][0]] = this.value / 2 + 'px';\n          } else {\n            style[MARGIN_TYPE[direction][0]] = '';\n          }\n\n          if (i !== slides.length - 1) {\n            style[MARGIN_TYPE[direction][1]] = this.value / 2 + 'px';\n          } else {\n            style[MARGIN_TYPE[direction][1]] = '';\n          }\n        }\n      },\n\n\n      /**\n       * Removes gaps from the slides.\n       *\n       * @param {HTMLCollection} slides\n       * @returns {Void}\n      */\n      remove: function remove(slides) {\n        for (var i = 0, len = slides.length; i < len; i++) {\n          var style = slides[i].style;\n\n          style.marginLeft = '';\n          style.marginRight = '';\n        }\n      }\n    };\n\n    define(Gaps, 'value', {\n      /**\n       * Gets value of the gap.\n       *\n       * @returns {Number}\n       */\n      get: function get() {\n        return toInt(Glide.settings.gap);\n      }\n    });\n\n    define(Gaps, 'grow', {\n      /**\n       * Gets additional dimentions value caused by gaps.\n       * Used to increase width of the slides wrapper.\n       *\n       * @returns {Number}\n       */\n      get: function get() {\n        return Gaps.value * (Components.Sizes.length - 1);\n      }\n    });\n\n    define(Gaps, 'reductor', {\n      /**\n       * Gets reduction value caused by gaps.\n       * Used to subtract width of the slides.\n       *\n       * @returns {Number}\n       */\n      get: function get() {\n        var perView = Glide.settings.perView;\n\n        return Gaps.value * (perView - 1) / perView;\n      }\n    });\n\n    /**\n     * Apply calculated gaps:\n     * - after building, so slides (including clones) will receive proper margins\n     * - on updating via API, to recalculate gaps with new options\n     */\n    Events.on(['build.after', 'update'], throttle(function () {\n      Gaps.apply(Components.Html.wrapper.children);\n    }, 30));\n\n    /**\n     * Remove gaps:\n     * - on destroying to bring markup to its inital state\n     */\n    Events.on('destroy', function () {\n      Gaps.remove(Components.Html.wrapper.children);\n    });\n\n    return Gaps;\n  }\n\n  /**\n   * Finds siblings nodes of the passed node.\n   *\n   * @param  {Element} node\n   * @return {Array}\n   */\n  function siblings(node) {\n    if (node && node.parentNode) {\n      var n = node.parentNode.firstChild;\n      var matched = [];\n\n      for (; n; n = n.nextSibling) {\n        if (n.nodeType === 1 && n !== node) {\n          matched.push(n);\n        }\n      }\n\n      return matched;\n    }\n\n    return [];\n  }\n\n  /**\n   * Checks if passed node exist and is a valid element.\n   *\n   * @param  {Element} node\n   * @return {Boolean}\n   */\n  function exist(node) {\n    if (node && node instanceof window.HTMLElement) {\n      return true;\n    }\n\n    return false;\n  }\n\n  var TRACK_SELECTOR = '[data-glide-el=\"track\"]';\n\n  function Html (Glide, Components) {\n    var Html = {\n      /**\n       * Setup slider HTML nodes.\n       *\n       * @param {Glide} glide\n       */\n      mount: function mount() {\n        this.root = Glide.selector;\n        this.track = this.root.querySelector(TRACK_SELECTOR);\n        this.slides = Array.prototype.slice.call(this.wrapper.children).filter(function (slide) {\n          return !slide.classList.contains(Glide.settings.classes.cloneSlide);\n        });\n      }\n    };\n\n    define(Html, 'root', {\n      /**\n       * Gets node of the glide main element.\n       *\n       * @return {Object}\n       */\n      get: function get() {\n        return Html._r;\n      },\n\n\n      /**\n       * Sets node of the glide main element.\n       *\n       * @return {Object}\n       */\n      set: function set(r) {\n        if (isString(r)) {\n          r = document.querySelector(r);\n        }\n\n        if (exist(r)) {\n          Html._r = r;\n        } else {\n          warn('Root element must be a existing Html node');\n        }\n      }\n    });\n\n    define(Html, 'track', {\n      /**\n       * Gets node of the glide track with slides.\n       *\n       * @return {Object}\n       */\n      get: function get() {\n        return Html._t;\n      },\n\n\n      /**\n       * Sets node of the glide track with slides.\n       *\n       * @return {Object}\n       */\n      set: function set(t) {\n        if (exist(t)) {\n          Html._t = t;\n        } else {\n          warn('Could not find track element. Please use ' + TRACK_SELECTOR + ' attribute.');\n        }\n      }\n    });\n\n    define(Html, 'wrapper', {\n      /**\n       * Gets node of the slides wrapper.\n       *\n       * @return {Object}\n       */\n      get: function get() {\n        return Html.track.children[0];\n      }\n    });\n\n    return Html;\n  }\n\n  function Peek (Glide, Components, Events) {\n    var Peek = {\n      /**\n       * Setups how much to peek based on settings.\n       *\n       * @return {Void}\n       */\n      mount: function mount() {\n        this.value = Glide.settings.peek;\n      }\n    };\n\n    define(Peek, 'value', {\n      /**\n       * Gets value of the peek.\n       *\n       * @returns {Number|Object}\n       */\n      get: function get() {\n        return Peek._v;\n      },\n\n\n      /**\n       * Sets value of the peek.\n       *\n       * @param {Number|Object} value\n       * @return {Void}\n       */\n      set: function set(value) {\n        if (isObject(value)) {\n          value.before = toInt(value.before);\n          value.after = toInt(value.after);\n        } else {\n          value = toInt(value);\n        }\n\n        Peek._v = value;\n      }\n    });\n\n    define(Peek, 'reductor', {\n      /**\n       * Gets reduction value caused by peek.\n       *\n       * @returns {Number}\n       */\n      get: function get() {\n        var value = Peek.value;\n        var perView = Glide.settings.perView;\n\n        if (isObject(value)) {\n          return value.before / perView + value.after / perView;\n        }\n\n        return value * 2 / perView;\n      }\n    });\n\n    /**\n     * Recalculate peeking sizes on:\n     * - when resizing window to update to proper percents\n     */\n    Events.on(['resize', 'update'], function () {\n      Peek.mount();\n    });\n\n    return Peek;\n  }\n\n  function Move (Glide, Components, Events) {\n    var Move = {\n      /**\n       * Constructs move component.\n       *\n       * @returns {Void}\n       */\n      mount: function mount() {\n        this._o = 0;\n      },\n\n\n      /**\n       * Calculates a movement value based on passed offset and currently active index.\n       *\n       * @param  {Number} offset\n       * @return {Void}\n       */\n      make: function make() {\n        var _this = this;\n\n        var offset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n        this.offset = offset;\n\n        Events.emit('move', {\n          movement: this.value\n        });\n\n        Components.Transition.after(function () {\n          Events.emit('move.after', {\n            movement: _this.value\n          });\n        });\n      }\n    };\n\n    define(Move, 'offset', {\n      /**\n       * Gets an offset value used to modify current translate.\n       *\n       * @return {Object}\n       */\n      get: function get() {\n        return Move._o;\n      },\n\n\n      /**\n       * Sets an offset value used to modify current translate.\n       *\n       * @return {Object}\n       */\n      set: function set(value) {\n        Move._o = !isUndefined(value) ? toInt(value) : 0;\n      }\n    });\n\n    define(Move, 'translate', {\n      /**\n       * Gets a raw movement value.\n       *\n       * @return {Number}\n       */\n      get: function get() {\n        return Components.Sizes.slideWidth * Glide.index;\n      }\n    });\n\n    define(Move, 'value', {\n      /**\n       * Gets an actual movement value corrected by offset.\n       *\n       * @return {Number}\n       */\n      get: function get() {\n        var offset = this.offset;\n        var translate = this.translate;\n\n        if (Components.Direction.is('rtl')) {\n          return translate + offset;\n        }\n\n        return translate - offset;\n      }\n    });\n\n    /**\n     * Make movement to proper slide on:\n     * - before build, so glide will start at `startAt` index\n     * - on each standard run to move to newly calculated index\n     */\n    Events.on(['build.before', 'run'], function () {\n      Move.make();\n    });\n\n    return Move;\n  }\n\n  function Sizes (Glide, Components, Events) {\n    var Sizes = {\n      /**\n       * Setups dimentions of slides.\n       *\n       * @return {Void}\n       */\n      setupSlides: function setupSlides() {\n        var width = this.slideWidth + 'px';\n        var slides = Components.Html.slides;\n\n        for (var i = 0; i < slides.length; i++) {\n          slides[i].style.width = width;\n        }\n      },\n\n\n      /**\n       * Setups dimentions of slides wrapper.\n       *\n       * @return {Void}\n       */\n      setupWrapper: function setupWrapper(dimention) {\n        Components.Html.wrapper.style.width = this.wrapperSize + 'px';\n      },\n\n\n      /**\n       * Removes applied styles from HTML elements.\n       *\n       * @returns {Void}\n       */\n      remove: function remove() {\n        var slides = Components.Html.slides;\n\n        for (var i = 0; i < slides.length; i++) {\n          slides[i].style.width = '';\n        }\n\n        Components.Html.wrapper.style.width = '';\n      }\n    };\n\n    define(Sizes, 'length', {\n      /**\n       * Gets count number of the slides.\n       *\n       * @return {Number}\n       */\n      get: function get() {\n        return Components.Html.slides.length;\n      }\n    });\n\n    define(Sizes, 'width', {\n      /**\n       * Gets width value of the glide.\n       *\n       * @return {Number}\n       */\n      get: function get() {\n        return Components.Html.root.offsetWidth;\n      }\n    });\n\n    define(Sizes, 'wrapperSize', {\n      /**\n       * Gets size of the slides wrapper.\n       *\n       * @return {Number}\n       */\n      get: function get() {\n        return Sizes.slideWidth * Sizes.length + Components.Gaps.grow + Components.Clones.grow;\n      }\n    });\n\n    define(Sizes, 'slideWidth', {\n      /**\n       * Gets width value of the single slide.\n       *\n       * @return {Number}\n       */\n      get: function get() {\n        return Sizes.width / Glide.settings.perView - Components.Peek.reductor - Components.Gaps.reductor;\n      }\n    });\n\n    /**\n     * Apply calculated glide's dimensions:\n     * - before building, so other dimentions (e.g. translate) will be calculated propertly\n     * - when resizing window to recalculate sildes dimensions\n     * - on updating via API, to calculate dimensions based on new options\n     */\n    Events.on(['build.before', 'resize', 'update'], function () {\n      Sizes.setupSlides();\n      Sizes.setupWrapper();\n    });\n\n    /**\n     * Remove calculated glide's dimensions:\n     * - on destoting to bring markup to its inital state\n     */\n    Events.on('destroy', function () {\n      Sizes.remove();\n    });\n\n    return Sizes;\n  }\n\n  function Build (Glide, Components, Events) {\n    var Build = {\n      /**\n       * Init glide building. Adds classes, sets\n       * dimensions and setups initial state.\n       *\n       * @return {Void}\n       */\n      mount: function mount() {\n        Events.emit('build.before');\n\n        this.typeClass();\n        this.activeClass();\n\n        Events.emit('build.after');\n      },\n\n\n      /**\n       * Adds `type` class to the glide element.\n       *\n       * @return {Void}\n       */\n      typeClass: function typeClass() {\n        Components.Html.root.classList.add(Glide.settings.classes[Glide.settings.type]);\n      },\n\n\n      /**\n       * Sets active class to current slide.\n       *\n       * @return {Void}\n       */\n      activeClass: function activeClass() {\n        var classes = Glide.settings.classes;\n        var slide = Components.Html.slides[Glide.index];\n\n        if (slide) {\n          slide.classList.add(classes.activeSlide);\n\n          siblings(slide).forEach(function (sibling) {\n            sibling.classList.remove(classes.activeSlide);\n          });\n        }\n      },\n\n\n      /**\n       * Removes HTML classes applied at building.\n       *\n       * @return {Void}\n       */\n      removeClasses: function removeClasses() {\n        var classes = Glide.settings.classes;\n\n        Components.Html.root.classList.remove(classes[Glide.settings.type]);\n\n        Components.Html.slides.forEach(function (sibling) {\n          sibling.classList.remove(classes.activeSlide);\n        });\n      }\n    };\n\n    /**\n     * Clear building classes:\n     * - on destroying to bring HTML to its initial state\n     * - on updating to remove classes before remounting component\n     */\n    Events.on(['destroy', 'update'], function () {\n      Build.removeClasses();\n    });\n\n    /**\n     * Remount component:\n     * - on resizing of the window to calculate new dimentions\n     * - on updating settings via API\n     */\n    Events.on(['resize', 'update'], function () {\n      Build.mount();\n    });\n\n    /**\n     * Swap active class of current slide:\n     * - after each move to the new index\n     */\n    Events.on('move.after', function () {\n      Build.activeClass();\n    });\n\n    return Build;\n  }\n\n  function Clones (Glide, Components, Events) {\n    var Clones = {\n      /**\n       * Create pattern map and collect slides to be cloned.\n       */\n      mount: function mount() {\n        this.items = [];\n\n        if (Glide.isType('carousel')) {\n          this.items = this.collect();\n        }\n      },\n\n\n      /**\n       * Collect clones with pattern.\n       *\n       * @return {Void}\n       */\n      collect: function collect() {\n        var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n        var slides = Components.Html.slides;\n        var _Glide$settings = Glide.settings,\n            perView = _Glide$settings.perView,\n            classes = _Glide$settings.classes;\n\n\n        var peekIncrementer = +!!Glide.settings.peek;\n        var part = perView + peekIncrementer;\n        var start = slides.slice(0, part);\n        var end = slides.slice(-part);\n\n        for (var r = 0; r < Math.max(1, Math.floor(perView / slides.length)); r++) {\n          for (var i = 0; i < start.length; i++) {\n            var clone = start[i].cloneNode(true);\n\n            clone.classList.add(classes.cloneSlide);\n\n            items.push(clone);\n          }\n\n          for (var _i = 0; _i < end.length; _i++) {\n            var _clone = end[_i].cloneNode(true);\n\n            _clone.classList.add(classes.cloneSlide);\n\n            items.unshift(_clone);\n          }\n        }\n\n        return items;\n      },\n\n\n      /**\n       * Append cloned slides with generated pattern.\n       *\n       * @return {Void}\n       */\n      append: function append() {\n        var items = this.items;\n        var _Components$Html = Components.Html,\n            wrapper = _Components$Html.wrapper,\n            slides = _Components$Html.slides;\n\n\n        var half = Math.floor(items.length / 2);\n        var prepend = items.slice(0, half).reverse();\n        var append = items.slice(half, items.length);\n        var width = Components.Sizes.slideWidth + 'px';\n\n        for (var i = 0; i < append.length; i++) {\n          wrapper.appendChild(append[i]);\n        }\n\n        for (var _i2 = 0; _i2 < prepend.length; _i2++) {\n          wrapper.insertBefore(prepend[_i2], slides[0]);\n        }\n\n        for (var _i3 = 0; _i3 < items.length; _i3++) {\n          items[_i3].style.width = width;\n        }\n      },\n\n\n      /**\n       * Remove all cloned slides.\n       *\n       * @return {Void}\n       */\n      remove: function remove() {\n        var items = this.items;\n\n\n        for (var i = 0; i < items.length; i++) {\n          Components.Html.wrapper.removeChild(items[i]);\n        }\n      }\n    };\n\n    define(Clones, 'grow', {\n      /**\n       * Gets additional dimentions value caused by clones.\n       *\n       * @return {Number}\n       */\n      get: function get() {\n        return (Components.Sizes.slideWidth + Components.Gaps.value) * Clones.items.length;\n      }\n    });\n\n    /**\n     * Append additional slide's clones:\n     * - while glide's type is `carousel`\n     */\n    Events.on('update', function () {\n      Clones.remove();\n      Clones.mount();\n      Clones.append();\n    });\n\n    /**\n     * Append additional slide's clones:\n     * - while glide's type is `carousel`\n     */\n    Events.on('build.before', function () {\n      if (Glide.isType('carousel')) {\n        Clones.append();\n      }\n    });\n\n    /**\n     * Remove clones HTMLElements:\n     * - on destroying, to bring HTML to its initial state\n     */\n    Events.on('destroy', function () {\n      Clones.remove();\n    });\n\n    return Clones;\n  }\n\n  var EventsBinder = function () {\n    /**\n     * Construct a EventsBinder instance.\n     */\n    function EventsBinder() {\n      var listeners = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      classCallCheck(this, EventsBinder);\n\n      this.listeners = listeners;\n    }\n\n    /**\n     * Adds events listeners to arrows HTML elements.\n     *\n     * @param  {String|Array} events\n     * @param  {Element|Window|Document} el\n     * @param  {Function} closure\n     * @param  {Boolean|Object} capture\n     * @return {Void}\n     */\n\n\n    createClass(EventsBinder, [{\n      key: 'on',\n      value: function on(events, el, closure) {\n        var capture = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n        if (isString(events)) {\n          events = [events];\n        }\n\n        for (var i = 0; i < events.length; i++) {\n          this.listeners[events[i]] = closure;\n\n          el.addEventListener(events[i], this.listeners[events[i]], capture);\n        }\n      }\n\n      /**\n       * Removes event listeners from arrows HTML elements.\n       *\n       * @param  {String|Array} events\n       * @param  {Element|Window|Document} el\n       * @param  {Boolean|Object} capture\n       * @return {Void}\n       */\n\n    }, {\n      key: 'off',\n      value: function off(events, el) {\n        var capture = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n        if (isString(events)) {\n          events = [events];\n        }\n\n        for (var i = 0; i < events.length; i++) {\n          el.removeEventListener(events[i], this.listeners[events[i]], capture);\n        }\n      }\n\n      /**\n       * Destroy collected listeners.\n       *\n       * @returns {Void}\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        delete this.listeners;\n      }\n    }]);\n    return EventsBinder;\n  }();\n\n  function Resize (Glide, Components, Events) {\n    /**\n     * Instance of the binder for DOM Events.\n     *\n     * @type {EventsBinder}\n     */\n    var Binder = new EventsBinder();\n\n    var Resize = {\n      /**\n       * Initializes window bindings.\n       */\n      mount: function mount() {\n        this.bind();\n      },\n\n\n      /**\n       * Binds `rezsize` listener to the window.\n       * It's a costly event, so we are debouncing it.\n       *\n       * @return {Void}\n       */\n      bind: function bind() {\n        Binder.on('resize', window, throttle(function () {\n          Events.emit('resize');\n        }, Glide.settings.throttle));\n      },\n\n\n      /**\n       * Unbinds listeners from the window.\n       *\n       * @return {Void}\n       */\n      unbind: function unbind() {\n        Binder.off('resize', window);\n      }\n    };\n\n    /**\n     * Remove bindings from window:\n     * - on destroying, to remove added EventListener\n     */\n    Events.on('destroy', function () {\n      Resize.unbind();\n      Binder.destroy();\n    });\n\n    return Resize;\n  }\n\n  var VALID_DIRECTIONS = ['ltr', 'rtl'];\n  var FLIPED_MOVEMENTS = {\n    '>': '<',\n    '<': '>',\n    '=': '='\n  };\n\n  function Direction (Glide, Components, Events) {\n    var Direction = {\n      /**\n       * Setups gap value based on settings.\n       *\n       * @return {Void}\n       */\n      mount: function mount() {\n        this.value = Glide.settings.direction;\n      },\n\n\n      /**\n       * Resolves pattern based on direction value\n       *\n       * @param {String} pattern\n       * @returns {String}\n       */\n      resolve: function resolve(pattern) {\n        var token = pattern.slice(0, 1);\n\n        if (this.is('rtl')) {\n          return pattern.split(token).join(FLIPED_MOVEMENTS[token]);\n        }\n\n        return pattern;\n      },\n\n\n      /**\n       * Checks value of direction mode.\n       *\n       * @param {String} direction\n       * @returns {Boolean}\n       */\n      is: function is(direction) {\n        return this.value === direction;\n      },\n\n\n      /**\n       * Applies direction class to the root HTML element.\n       *\n       * @return {Void}\n       */\n      addClass: function addClass() {\n        Components.Html.root.classList.add(Glide.settings.classes.direction[this.value]);\n      },\n\n\n      /**\n       * Removes direction class from the root HTML element.\n       *\n       * @return {Void}\n       */\n      removeClass: function removeClass() {\n        Components.Html.root.classList.remove(Glide.settings.classes.direction[this.value]);\n      }\n    };\n\n    define(Direction, 'value', {\n      /**\n       * Gets value of the direction.\n       *\n       * @returns {Number}\n       */\n      get: function get() {\n        return Direction._v;\n      },\n\n\n      /**\n       * Sets value of the direction.\n       *\n       * @param {String} value\n       * @return {Void}\n       */\n      set: function set(value) {\n        if (VALID_DIRECTIONS.indexOf(value) > -1) {\n          Direction._v = value;\n        } else {\n          warn('Direction value must be `ltr` or `rtl`');\n        }\n      }\n    });\n\n    /**\n     * Clear direction class:\n     * - on destroy to bring HTML to its initial state\n     * - on update to remove class before reappling bellow\n     */\n    Events.on(['destroy', 'update'], function () {\n      Direction.removeClass();\n    });\n\n    /**\n     * Remount component:\n     * - on update to reflect changes in direction value\n     */\n    Events.on('update', function () {\n      Direction.mount();\n    });\n\n    /**\n     * Apply direction class:\n     * - before building to apply class for the first time\n     * - on updating to reapply direction class that may changed\n     */\n    Events.on(['build.before', 'update'], function () {\n      Direction.addClass();\n    });\n\n    return Direction;\n  }\n\n  /**\n   * Reflects value of glide movement.\n   *\n   * @param  {Object} Glide\n   * @param  {Object} Components\n   * @return {Object}\n   */\n  function Rtl (Glide, Components) {\n    return {\n      /**\n       * Negates the passed translate if glide is in RTL option.\n       *\n       * @param  {Number} translate\n       * @return {Number}\n       */\n      modify: function modify(translate) {\n        if (Components.Direction.is('rtl')) {\n          return -translate;\n        }\n\n        return translate;\n      }\n    };\n  }\n\n  /**\n   * Updates glide movement with a `gap` settings.\n   *\n   * @param  {Object} Glide\n   * @param  {Object} Components\n   * @return {Object}\n   */\n  function Gap (Glide, Components) {\n    return {\n      /**\n       * Modifies passed translate value with number in the `gap` settings.\n       *\n       * @param  {Number} translate\n       * @return {Number}\n       */\n      modify: function modify(translate) {\n        return translate + Components.Gaps.value * Glide.index;\n      }\n    };\n  }\n\n  /**\n   * Updates glide movement with width of additional clones width.\n   *\n   * @param  {Object} Glide\n   * @param  {Object} Components\n   * @return {Object}\n   */\n  function Grow (Glide, Components) {\n    return {\n      /**\n       * Adds to the passed translate width of the half of clones.\n       *\n       * @param  {Number} translate\n       * @return {Number}\n       */\n      modify: function modify(translate) {\n        return translate + Components.Clones.grow / 2;\n      }\n    };\n  }\n\n  /**\n   * Updates glide movement with a `peek` settings.\n   *\n   * @param  {Object} Glide\n   * @param  {Object} Components\n   * @return {Object}\n   */\n  function Peeking (Glide, Components) {\n    return {\n      /**\n       * Modifies passed translate value with a `peek` setting.\n       *\n       * @param  {Number} translate\n       * @return {Number}\n       */\n      modify: function modify(translate) {\n        if (Glide.settings.focusAt >= 0) {\n          var peek = Components.Peek.value;\n\n          if (isObject(peek)) {\n            return translate - peek.before;\n          }\n\n          return translate - peek;\n        }\n\n        return translate;\n      }\n    };\n  }\n\n  /**\n   * Updates glide movement with a `focusAt` settings.\n   *\n   * @param  {Object} Glide\n   * @param  {Object} Components\n   * @return {Object}\n   */\n  function Focusing (Glide, Components) {\n    return {\n      /**\n       * Modifies passed translate value with index in the `focusAt` setting.\n       *\n       * @param  {Number} translate\n       * @return {Number}\n       */\n      modify: function modify(translate) {\n        var gap = Components.Gaps.value;\n        var width = Components.Sizes.width;\n        var focusAt = Glide.settings.focusAt;\n        var slideWidth = Components.Sizes.slideWidth;\n\n        if (focusAt === 'center') {\n          return translate - (width / 2 - slideWidth / 2);\n        }\n\n        return translate - slideWidth * focusAt - gap * focusAt;\n      }\n    };\n  }\n\n  /**\n   * Applies diffrent transformers on translate value.\n   *\n   * @param  {Object} Glide\n   * @param  {Object} Components\n   * @return {Object}\n   */\n  function mutator (Glide, Components, Events) {\n    /**\n     * Merge instance transformers with collection of default transformers.\n     * It's important that the Rtl component be last on the list,\n     * so it reflects all previous transformations.\n     *\n     * @type {Array}\n     */\n    var TRANSFORMERS = [Gap, Grow, Peeking, Focusing].concat(Glide._t, [Rtl]);\n\n    return {\n      /**\n       * Piplines translate value with registered transformers.\n       *\n       * @param  {Number} translate\n       * @return {Number}\n       */\n      mutate: function mutate(translate) {\n        for (var i = 0; i < TRANSFORMERS.length; i++) {\n          var transformer = TRANSFORMERS[i];\n\n          if (isFunction(transformer) && isFunction(transformer().modify)) {\n            translate = transformer(Glide, Components, Events).modify(translate);\n          } else {\n            warn('Transformer should be a function that returns an object with `modify()` method');\n          }\n        }\n\n        return translate;\n      }\n    };\n  }\n\n  function Translate (Glide, Components, Events) {\n    var Translate = {\n      /**\n       * Sets value of translate on HTML element.\n       *\n       * @param {Number} value\n       * @return {Void}\n       */\n      set: function set(value) {\n        var transform = mutator(Glide, Components).mutate(value);\n\n        Components.Html.wrapper.style.transform = 'translate3d(' + -1 * transform + 'px, 0px, 0px)';\n      },\n\n\n      /**\n       * Removes value of translate from HTML element.\n       *\n       * @return {Void}\n       */\n      remove: function remove() {\n        Components.Html.wrapper.style.transform = '';\n      }\n    };\n\n    /**\n     * Set new translate value:\n     * - on move to reflect index change\n     * - on updating via API to reflect possible changes in options\n     */\n    Events.on('move', function (context) {\n      var gap = Components.Gaps.value;\n      var length = Components.Sizes.length;\n      var width = Components.Sizes.slideWidth;\n\n      if (Glide.isType('carousel') && Components.Run.isOffset('<')) {\n        Components.Transition.after(function () {\n          Events.emit('translate.jump');\n\n          Translate.set(width * (length - 1));\n        });\n\n        return Translate.set(-width - gap * length);\n      }\n\n      if (Glide.isType('carousel') && Components.Run.isOffset('>')) {\n        Components.Transition.after(function () {\n          Events.emit('translate.jump');\n\n          Translate.set(0);\n        });\n\n        return Translate.set(width * length + gap * length);\n      }\n\n      return Translate.set(context.movement);\n    });\n\n    /**\n     * Remove translate:\n     * - on destroying to bring markup to its inital state\n     */\n    Events.on('destroy', function () {\n      Translate.remove();\n    });\n\n    return Translate;\n  }\n\n  function Transition (Glide, Components, Events) {\n    /**\n     * Holds inactivity status of transition.\n     * When true transition is not applied.\n     *\n     * @type {Boolean}\n     */\n    var disabled = false;\n\n    var Transition = {\n      /**\n       * Composes string of the CSS transition.\n       *\n       * @param {String} property\n       * @return {String}\n       */\n      compose: function compose(property) {\n        var settings = Glide.settings;\n\n        if (!disabled) {\n          return property + ' ' + this.duration + 'ms ' + settings.animationTimingFunc;\n        }\n\n        return property + ' 0ms ' + settings.animationTimingFunc;\n      },\n\n\n      /**\n       * Sets value of transition on HTML element.\n       *\n       * @param {String=} property\n       * @return {Void}\n       */\n      set: function set() {\n        var property = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'transform';\n\n        Components.Html.wrapper.style.transition = this.compose(property);\n      },\n\n\n      /**\n       * Removes value of transition from HTML element.\n       *\n       * @return {Void}\n       */\n      remove: function remove() {\n        Components.Html.wrapper.style.transition = '';\n      },\n\n\n      /**\n       * Runs callback after animation.\n       *\n       * @param  {Function} callback\n       * @return {Void}\n       */\n      after: function after(callback) {\n        setTimeout(function () {\n          callback();\n        }, this.duration);\n      },\n\n\n      /**\n       * Enable transition.\n       *\n       * @return {Void}\n       */\n      enable: function enable() {\n        disabled = false;\n\n        this.set();\n      },\n\n\n      /**\n       * Disable transition.\n       *\n       * @return {Void}\n       */\n      disable: function disable() {\n        disabled = true;\n\n        this.set();\n      }\n    };\n\n    define(Transition, 'duration', {\n      /**\n       * Gets duration of the transition based\n       * on currently running animation type.\n       *\n       * @return {Number}\n       */\n      get: function get() {\n        var settings = Glide.settings;\n\n        if (Glide.isType('slider') && Components.Run.offset) {\n          return settings.rewindDuration;\n        }\n\n        return settings.animationDuration;\n      }\n    });\n\n    /**\n     * Set transition `style` value:\n     * - on each moving, because it may be cleared by offset move\n     */\n    Events.on('move', function () {\n      Transition.set();\n    });\n\n    /**\n     * Disable transition:\n     * - before initial build to avoid transitioning from `0` to `startAt` index\n     * - while resizing window and recalculating dimentions\n     * - on jumping from offset transition at start and end edges in `carousel` type\n     */\n    Events.on(['build.before', 'resize', 'translate.jump'], function () {\n      Transition.disable();\n    });\n\n    /**\n     * Enable transition:\n     * - on each running, because it may be disabled by offset move\n     */\n    Events.on('run', function () {\n      Transition.enable();\n    });\n\n    /**\n     * Remove transition:\n     * - on destroying to bring markup to its inital state\n     */\n    Events.on('destroy', function () {\n      Transition.remove();\n    });\n\n    return Transition;\n  }\n\n  /**\n   * Test via a getter in the options object to see\n   * if the passive property is accessed.\n   *\n   * @see https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\n   */\n\n  var supportsPassive = false;\n\n  try {\n    var opts = Object.defineProperty({}, 'passive', {\n      get: function get() {\n        supportsPassive = true;\n      }\n    });\n\n    window.addEventListener('testPassive', null, opts);\n    window.removeEventListener('testPassive', null, opts);\n  } catch (e) {}\n\n  var supportsPassive$1 = supportsPassive;\n\n  var START_EVENTS = ['touchstart', 'mousedown'];\n  var MOVE_EVENTS = ['touchmove', 'mousemove'];\n  var END_EVENTS = ['touchend', 'touchcancel', 'mouseup', 'mouseleave'];\n  var MOUSE_EVENTS = ['mousedown', 'mousemove', 'mouseup', 'mouseleave'];\n\n  function Swipe (Glide, Components, Events) {\n    /**\n     * Instance of the binder for DOM Events.\n     *\n     * @type {EventsBinder}\n     */\n    var Binder = new EventsBinder();\n\n    var swipeSin = 0;\n    var swipeStartX = 0;\n    var swipeStartY = 0;\n    var disabled = false;\n    var capture = supportsPassive$1 ? { passive: true } : false;\n\n    var Swipe = {\n      /**\n       * Initializes swipe bindings.\n       *\n       * @return {Void}\n       */\n      mount: function mount() {\n        this.bindSwipeStart();\n      },\n\n\n      /**\n       * Handler for `swipestart` event. Calculates entry points of the user's tap.\n       *\n       * @param {Object} event\n       * @return {Void}\n       */\n      start: function start(event) {\n        if (!disabled && !Glide.disabled) {\n          this.disable();\n\n          var swipe = this.touches(event);\n\n          swipeSin = null;\n          swipeStartX = toInt(swipe.pageX);\n          swipeStartY = toInt(swipe.pageY);\n\n          this.bindSwipeMove();\n          this.bindSwipeEnd();\n\n          Events.emit('swipe.start');\n        }\n      },\n\n\n      /**\n       * Handler for `swipemove` event. Calculates user's tap angle and distance.\n       *\n       * @param {Object} event\n       */\n      move: function move(event) {\n        if (!Glide.disabled) {\n          var _Glide$settings = Glide.settings,\n              touchAngle = _Glide$settings.touchAngle,\n              touchRatio = _Glide$settings.touchRatio,\n              classes = _Glide$settings.classes;\n\n\n          var swipe = this.touches(event);\n\n          var subExSx = toInt(swipe.pageX) - swipeStartX;\n          var subEySy = toInt(swipe.pageY) - swipeStartY;\n          var powEX = Math.abs(subExSx << 2);\n          var powEY = Math.abs(subEySy << 2);\n          var swipeHypotenuse = Math.sqrt(powEX + powEY);\n          var swipeCathetus = Math.sqrt(powEY);\n\n          swipeSin = Math.asin(swipeCathetus / swipeHypotenuse);\n\n          if (swipeSin * 180 / Math.PI < touchAngle) {\n            event.stopPropagation();\n\n            Components.Move.make(subExSx * toFloat(touchRatio));\n\n            Components.Html.root.classList.add(classes.dragging);\n\n            Events.emit('swipe.move');\n          } else {\n            return false;\n          }\n        }\n      },\n\n\n      /**\n       * Handler for `swipeend` event. Finitializes user's tap and decides about glide move.\n       *\n       * @param {Object} event\n       * @return {Void}\n       */\n      end: function end(event) {\n        if (!Glide.disabled) {\n          var settings = Glide.settings;\n\n          var swipe = this.touches(event);\n          var threshold = this.threshold(event);\n\n          var swipeDistance = swipe.pageX - swipeStartX;\n          var swipeDeg = swipeSin * 180 / Math.PI;\n          var steps = Math.round(swipeDistance / Components.Sizes.slideWidth);\n\n          this.enable();\n\n          if (swipeDistance > threshold && swipeDeg < settings.touchAngle) {\n            // While swipe is positive and greater than threshold move backward.\n            if (settings.perTouch) {\n              steps = Math.min(steps, toInt(settings.perTouch));\n            }\n\n            if (Components.Direction.is('rtl')) {\n              steps = -steps;\n            }\n\n            Components.Run.make(Components.Direction.resolve('<' + steps));\n          } else if (swipeDistance < -threshold && swipeDeg < settings.touchAngle) {\n            // While swipe is negative and lower than negative threshold move forward.\n            if (settings.perTouch) {\n              steps = Math.max(steps, -toInt(settings.perTouch));\n            }\n\n            if (Components.Direction.is('rtl')) {\n              steps = -steps;\n            }\n\n            Components.Run.make(Components.Direction.resolve('>' + steps));\n          } else {\n            // While swipe don't reach distance apply previous transform.\n            Components.Move.make();\n          }\n\n          Components.Html.root.classList.remove(settings.classes.dragging);\n\n          this.unbindSwipeMove();\n          this.unbindSwipeEnd();\n\n          Events.emit('swipe.end');\n        }\n      },\n\n\n      /**\n       * Binds swipe's starting event.\n       *\n       * @return {Void}\n       */\n      bindSwipeStart: function bindSwipeStart() {\n        var _this = this;\n\n        var settings = Glide.settings;\n\n        if (settings.swipeThreshold) {\n          Binder.on(START_EVENTS[0], Components.Html.wrapper, function (event) {\n            _this.start(event);\n          }, capture);\n        }\n\n        if (settings.dragThreshold) {\n          Binder.on(START_EVENTS[1], Components.Html.wrapper, function (event) {\n            _this.start(event);\n          }, capture);\n        }\n      },\n\n\n      /**\n       * Unbinds swipe's starting event.\n       *\n       * @return {Void}\n       */\n      unbindSwipeStart: function unbindSwipeStart() {\n        Binder.off(START_EVENTS[0], Components.Html.wrapper, capture);\n        Binder.off(START_EVENTS[1], Components.Html.wrapper, capture);\n      },\n\n\n      /**\n       * Binds swipe's moving event.\n       *\n       * @return {Void}\n       */\n      bindSwipeMove: function bindSwipeMove() {\n        var _this2 = this;\n\n        Binder.on(MOVE_EVENTS, Components.Html.wrapper, throttle(function (event) {\n          _this2.move(event);\n        }, Glide.settings.throttle), capture);\n      },\n\n\n      /**\n       * Unbinds swipe's moving event.\n       *\n       * @return {Void}\n       */\n      unbindSwipeMove: function unbindSwipeMove() {\n        Binder.off(MOVE_EVENTS, Components.Html.wrapper, capture);\n      },\n\n\n      /**\n       * Binds swipe's ending event.\n       *\n       * @return {Void}\n       */\n      bindSwipeEnd: function bindSwipeEnd() {\n        var _this3 = this;\n\n        Binder.on(END_EVENTS, Components.Html.wrapper, function (event) {\n          _this3.end(event);\n        });\n      },\n\n\n      /**\n       * Unbinds swipe's ending event.\n       *\n       * @return {Void}\n       */\n      unbindSwipeEnd: function unbindSwipeEnd() {\n        Binder.off(END_EVENTS, Components.Html.wrapper);\n      },\n\n\n      /**\n       * Normalizes event touches points accorting to different types.\n       *\n       * @param {Object} event\n       */\n      touches: function touches(event) {\n        if (MOUSE_EVENTS.indexOf(event.type) > -1) {\n          return event;\n        }\n\n        return event.touches[0] || event.changedTouches[0];\n      },\n\n\n      /**\n       * Gets value of minimum swipe distance settings based on event type.\n       *\n       * @return {Number}\n       */\n      threshold: function threshold(event) {\n        var settings = Glide.settings;\n\n        if (MOUSE_EVENTS.indexOf(event.type) > -1) {\n          return settings.dragThreshold;\n        }\n\n        return settings.swipeThreshold;\n      },\n\n\n      /**\n       * Enables swipe event.\n       *\n       * @return {self}\n       */\n      enable: function enable() {\n        disabled = false;\n\n        Components.Transition.enable();\n\n        return this;\n      },\n\n\n      /**\n       * Disables swipe event.\n       *\n       * @return {self}\n       */\n      disable: function disable() {\n        disabled = true;\n\n        Components.Transition.disable();\n\n        return this;\n      }\n    };\n\n    /**\n     * Add component class:\n     * - after initial building\n     */\n    Events.on('build.after', function () {\n      Components.Html.root.classList.add(Glide.settings.classes.swipeable);\n    });\n\n    /**\n     * Remove swiping bindings:\n     * - on destroying, to remove added EventListeners\n     */\n    Events.on('destroy', function () {\n      Swipe.unbindSwipeStart();\n      Swipe.unbindSwipeMove();\n      Swipe.unbindSwipeEnd();\n      Binder.destroy();\n    });\n\n    return Swipe;\n  }\n\n  function Images (Glide, Components, Events) {\n    /**\n     * Instance of the binder for DOM Events.\n     *\n     * @type {EventsBinder}\n     */\n    var Binder = new EventsBinder();\n\n    var Images = {\n      /**\n       * Binds listener to glide wrapper.\n       *\n       * @return {Void}\n       */\n      mount: function mount() {\n        this.bind();\n      },\n\n\n      /**\n       * Binds `dragstart` event on wrapper to prevent dragging images.\n       *\n       * @return {Void}\n       */\n      bind: function bind() {\n        Binder.on('dragstart', Components.Html.wrapper, this.dragstart);\n      },\n\n\n      /**\n       * Unbinds `dragstart` event on wrapper.\n       *\n       * @return {Void}\n       */\n      unbind: function unbind() {\n        Binder.off('dragstart', Components.Html.wrapper);\n      },\n\n\n      /**\n       * Event handler. Prevents dragging.\n       *\n       * @return {Void}\n       */\n      dragstart: function dragstart(event) {\n        event.preventDefault();\n      }\n    };\n\n    /**\n     * Remove bindings from images:\n     * - on destroying, to remove added EventListeners\n     */\n    Events.on('destroy', function () {\n      Images.unbind();\n      Binder.destroy();\n    });\n\n    return Images;\n  }\n\n  function Anchors (Glide, Components, Events) {\n    /**\n     * Instance of the binder for DOM Events.\n     *\n     * @type {EventsBinder}\n     */\n    var Binder = new EventsBinder();\n\n    /**\n     * Holds detaching status of anchors.\n     * Prevents detaching of already detached anchors.\n     *\n     * @private\n     * @type {Boolean}\n     */\n    var detached = false;\n\n    /**\n     * Holds preventing status of anchors.\n     * If `true` redirection after click will be disabled.\n     *\n     * @private\n     * @type {Boolean}\n     */\n    var prevented = false;\n\n    var Anchors = {\n      /**\n       * Setups a initial state of anchors component.\n       *\n       * @returns {Void}\n       */\n      mount: function mount() {\n        /**\n         * Holds collection of anchors elements.\n         *\n         * @private\n         * @type {HTMLCollection}\n         */\n        this._a = Components.Html.wrapper.querySelectorAll('a');\n\n        this.bind();\n      },\n\n\n      /**\n       * Binds events to anchors inside a track.\n       *\n       * @return {Void}\n       */\n      bind: function bind() {\n        Binder.on('click', Components.Html.wrapper, this.click);\n      },\n\n\n      /**\n       * Unbinds events attached to anchors inside a track.\n       *\n       * @return {Void}\n       */\n      unbind: function unbind() {\n        Binder.off('click', Components.Html.wrapper);\n      },\n\n\n      /**\n       * Handler for click event. Prevents clicks when glide is in `prevent` status.\n       *\n       * @param  {Object} event\n       * @return {Void}\n       */\n      click: function click(event) {\n        if (prevented) {\n          event.stopPropagation();\n          event.preventDefault();\n        }\n      },\n\n\n      /**\n       * Detaches anchors click event inside glide.\n       *\n       * @return {self}\n       */\n      detach: function detach() {\n        prevented = true;\n\n        if (!detached) {\n          for (var i = 0; i < this.items.length; i++) {\n            this.items[i].draggable = false;\n\n            this.items[i].setAttribute('data-href', this.items[i].getAttribute('href'));\n\n            this.items[i].removeAttribute('href');\n          }\n\n          detached = true;\n        }\n\n        return this;\n      },\n\n\n      /**\n       * Attaches anchors click events inside glide.\n       *\n       * @return {self}\n       */\n      attach: function attach() {\n        prevented = false;\n\n        if (detached) {\n          for (var i = 0; i < this.items.length; i++) {\n            this.items[i].draggable = true;\n\n            this.items[i].setAttribute('href', this.items[i].getAttribute('data-href'));\n          }\n\n          detached = false;\n        }\n\n        return this;\n      }\n    };\n\n    define(Anchors, 'items', {\n      /**\n       * Gets collection of the arrows HTML elements.\n       *\n       * @return {HTMLElement[]}\n       */\n      get: function get() {\n        return Anchors._a;\n      }\n    });\n\n    /**\n     * Detach anchors inside slides:\n     * - on swiping, so they won't redirect to its `href` attributes\n     */\n    Events.on('swipe.move', function () {\n      Anchors.detach();\n    });\n\n    /**\n     * Attach anchors inside slides:\n     * - after swiping and transitions ends, so they can redirect after click again\n     */\n    Events.on('swipe.end', function () {\n      Components.Transition.after(function () {\n        Anchors.attach();\n      });\n    });\n\n    /**\n     * Unbind anchors inside slides:\n     * - on destroying, to bring anchors to its initial state\n     */\n    Events.on('destroy', function () {\n      Anchors.attach();\n      Anchors.unbind();\n      Binder.destroy();\n    });\n\n    return Anchors;\n  }\n\n  var NAV_SELECTOR = '[data-glide-el=\"controls[nav]\"]';\n  var CONTROLS_SELECTOR = '[data-glide-el^=\"controls\"]';\n\n  function Controls (Glide, Components, Events) {\n    /**\n     * Instance of the binder for DOM Events.\n     *\n     * @type {EventsBinder}\n     */\n    var Binder = new EventsBinder();\n\n    var capture = supportsPassive$1 ? { passive: true } : false;\n\n    var Controls = {\n      /**\n       * Inits arrows. Binds events listeners\n       * to the arrows HTML elements.\n       *\n       * @return {Void}\n       */\n      mount: function mount() {\n        /**\n         * Collection of navigation HTML elements.\n         *\n         * @private\n         * @type {HTMLCollection}\n         */\n        this._n = Components.Html.root.querySelectorAll(NAV_SELECTOR);\n\n        /**\n         * Collection of controls HTML elements.\n         *\n         * @private\n         * @type {HTMLCollection}\n         */\n        this._c = Components.Html.root.querySelectorAll(CONTROLS_SELECTOR);\n\n        this.addBindings();\n      },\n\n\n      /**\n       * Sets active class to current slide.\n       *\n       * @return {Void}\n       */\n      setActive: function setActive() {\n        for (var i = 0; i < this._n.length; i++) {\n          this.addClass(this._n[i].children);\n        }\n      },\n\n\n      /**\n       * Removes active class to current slide.\n       *\n       * @return {Void}\n       */\n      removeActive: function removeActive() {\n        for (var i = 0; i < this._n.length; i++) {\n          this.removeClass(this._n[i].children);\n        }\n      },\n\n\n      /**\n       * Toggles active class on items inside navigation.\n       *\n       * @param  {HTMLElement} controls\n       * @return {Void}\n       */\n      addClass: function addClass(controls) {\n        var settings = Glide.settings;\n        var item = controls[Glide.index];\n\n        if (item) {\n          item.classList.add(settings.classes.activeNav);\n\n          siblings(item).forEach(function (sibling) {\n            sibling.classList.remove(settings.classes.activeNav);\n          });\n        }\n      },\n\n\n      /**\n       * Removes active class from active control.\n       *\n       * @param  {HTMLElement} controls\n       * @return {Void}\n       */\n      removeClass: function removeClass(controls) {\n        var item = controls[Glide.index];\n\n        if (item) {\n          item.classList.remove(Glide.settings.classes.activeNav);\n        }\n      },\n\n\n      /**\n       * Adds handles to the each group of controls.\n       *\n       * @return {Void}\n       */\n      addBindings: function addBindings() {\n        for (var i = 0; i < this._c.length; i++) {\n          this.bind(this._c[i].children);\n        }\n      },\n\n\n      /**\n       * Removes handles from the each group of controls.\n       *\n       * @return {Void}\n       */\n      removeBindings: function removeBindings() {\n        for (var i = 0; i < this._c.length; i++) {\n          this.unbind(this._c[i].children);\n        }\n      },\n\n\n      /**\n       * Binds events to arrows HTML elements.\n       *\n       * @param {HTMLCollection} elements\n       * @return {Void}\n       */\n      bind: function bind(elements) {\n        for (var i = 0; i < elements.length; i++) {\n          Binder.on('click', elements[i], this.click);\n          Binder.on('touchstart', elements[i], this.click, capture);\n        }\n      },\n\n\n      /**\n       * Unbinds events binded to the arrows HTML elements.\n       *\n       * @param {HTMLCollection} elements\n       * @return {Void}\n       */\n      unbind: function unbind(elements) {\n        for (var i = 0; i < elements.length; i++) {\n          Binder.off(['click', 'touchstart'], elements[i]);\n        }\n      },\n\n\n      /**\n       * Handles `click` event on the arrows HTML elements.\n       * Moves slider in driection precised in\n       * `data-glide-dir` attribute.\n       *\n       * @param {Object} event\n       * @return {Void}\n       */\n      click: function click(event) {\n        event.preventDefault();\n\n        Components.Run.make(Components.Direction.resolve(event.currentTarget.getAttribute('data-glide-dir')));\n      }\n    };\n\n    define(Controls, 'items', {\n      /**\n       * Gets collection of the controls HTML elements.\n       *\n       * @return {HTMLElement[]}\n       */\n      get: function get() {\n        return Controls._c;\n      }\n    });\n\n    /**\n     * Swap active class of current navigation item:\n     * - after mounting to set it to initial index\n     * - after each move to the new index\n     */\n    Events.on(['mount.after', 'move.after'], function () {\n      Controls.setActive();\n    });\n\n    /**\n     * Remove bindings and HTML Classes:\n     * - on destroying, to bring markup to its initial state\n     */\n    Events.on('destroy', function () {\n      Controls.removeBindings();\n      Controls.removeActive();\n      Binder.destroy();\n    });\n\n    return Controls;\n  }\n\n  function Keyboard (Glide, Components, Events) {\n    /**\n     * Instance of the binder for DOM Events.\n     *\n     * @type {EventsBinder}\n     */\n    var Binder = new EventsBinder();\n\n    var Keyboard = {\n      /**\n       * Binds keyboard events on component mount.\n       *\n       * @return {Void}\n       */\n      mount: function mount() {\n        if (Glide.settings.keyboard) {\n          this.bind();\n        }\n      },\n\n\n      /**\n       * Adds keyboard press events.\n       *\n       * @return {Void}\n       */\n      bind: function bind() {\n        Binder.on('keyup', document, this.press);\n      },\n\n\n      /**\n       * Removes keyboard press events.\n       *\n       * @return {Void}\n       */\n      unbind: function unbind() {\n        Binder.off('keyup', document);\n      },\n\n\n      /**\n       * Handles keyboard's arrows press and moving glide foward and backward.\n       *\n       * @param  {Object} event\n       * @return {Void}\n       */\n      press: function press(event) {\n        if (event.keyCode === 39) {\n          Components.Run.make(Components.Direction.resolve('>'));\n        }\n\n        if (event.keyCode === 37) {\n          Components.Run.make(Components.Direction.resolve('<'));\n        }\n      }\n    };\n\n    /**\n     * Remove bindings from keyboard:\n     * - on destroying to remove added events\n     * - on updating to remove events before remounting\n     */\n    Events.on(['destroy', 'update'], function () {\n      Keyboard.unbind();\n    });\n\n    /**\n     * Remount component\n     * - on updating to reflect potential changes in settings\n     */\n    Events.on('update', function () {\n      Keyboard.mount();\n    });\n\n    /**\n     * Destroy binder:\n     * - on destroying to remove listeners\n     */\n    Events.on('destroy', function () {\n      Binder.destroy();\n    });\n\n    return Keyboard;\n  }\n\n  function Autoplay (Glide, Components, Events) {\n    /**\n     * Instance of the binder for DOM Events.\n     *\n     * @type {EventsBinder}\n     */\n    var Binder = new EventsBinder();\n\n    var Autoplay = {\n      /**\n       * Initializes autoplaying and events.\n       *\n       * @return {Void}\n       */\n      mount: function mount() {\n        this.start();\n\n        if (Glide.settings.hoverpause) {\n          this.bind();\n        }\n      },\n\n\n      /**\n       * Starts autoplaying in configured interval.\n       *\n       * @param {Boolean|Number} force Run autoplaying with passed interval regardless of `autoplay` settings\n       * @return {Void}\n       */\n      start: function start() {\n        var _this = this;\n\n        if (Glide.settings.autoplay) {\n          if (isUndefined(this._i)) {\n            this._i = setInterval(function () {\n              _this.stop();\n\n              Components.Run.make('>');\n\n              _this.start();\n            }, this.time);\n          }\n        }\n      },\n\n\n      /**\n       * Stops autorunning of the glide.\n       *\n       * @return {Void}\n       */\n      stop: function stop() {\n        this._i = clearInterval(this._i);\n      },\n\n\n      /**\n       * Stops autoplaying while mouse is over glide's area.\n       *\n       * @return {Void}\n       */\n      bind: function bind() {\n        var _this2 = this;\n\n        Binder.on('mouseover', Components.Html.root, function () {\n          _this2.stop();\n        });\n\n        Binder.on('mouseout', Components.Html.root, function () {\n          _this2.start();\n        });\n      },\n\n\n      /**\n       * Unbind mouseover events.\n       *\n       * @returns {Void}\n       */\n      unbind: function unbind() {\n        Binder.off(['mouseover', 'mouseout'], Components.Html.root);\n      }\n    };\n\n    define(Autoplay, 'time', {\n      /**\n       * Gets time period value for the autoplay interval. Prioritizes\n       * times in `data-glide-autoplay` attrubutes over options.\n       *\n       * @return {Number}\n       */\n      get: function get() {\n        var autoplay = Components.Html.slides[Glide.index].getAttribute('data-glide-autoplay');\n\n        if (autoplay) {\n          return toInt(autoplay);\n        }\n\n        return toInt(Glide.settings.autoplay);\n      }\n    });\n\n    /**\n     * Stop autoplaying and unbind events:\n     * - on destroying, to clear defined interval\n     * - on updating via API to reset interval that may changed\n     */\n    Events.on(['destroy', 'update'], function () {\n      Autoplay.unbind();\n    });\n\n    /**\n     * Stop autoplaying:\n     * - before each run, to restart autoplaying\n     * - on pausing via API\n     * - on destroying, to clear defined interval\n     * - while starting a swipe\n     * - on updating via API to reset interval that may changed\n     */\n    Events.on(['run.before', 'pause', 'destroy', 'swipe.start', 'update'], function () {\n      Autoplay.stop();\n    });\n\n    /**\n     * Start autoplaying:\n     * - after each run, to restart autoplaying\n     * - on playing via API\n     * - while ending a swipe\n     */\n    Events.on(['run.after', 'play', 'swipe.end'], function () {\n      Autoplay.start();\n    });\n\n    /**\n     * Remount autoplaying:\n     * - on updating via API to reset interval that may changed\n     */\n    Events.on('update', function () {\n      Autoplay.mount();\n    });\n\n    /**\n     * Destroy a binder:\n     * - on destroying glide instance to clearup listeners\n     */\n    Events.on('destroy', function () {\n      Binder.destroy();\n    });\n\n    return Autoplay;\n  }\n\n  /**\n   * Sorts keys of breakpoint object so they will be ordered from lower to bigger.\n   *\n   * @param {Object} points\n   * @returns {Object}\n   */\n  function sortBreakpoints(points) {\n    if (isObject(points)) {\n      return sortKeys(points);\n    } else {\n      warn('Breakpoints option must be an object');\n    }\n\n    return {};\n  }\n\n  function Breakpoints (Glide, Components, Events) {\n    /**\n     * Instance of the binder for DOM Events.\n     *\n     * @type {EventsBinder}\n     */\n    var Binder = new EventsBinder();\n\n    /**\n     * Holds reference to settings.\n     *\n     * @type {Object}\n     */\n    var settings = Glide.settings;\n\n    /**\n     * Holds reference to breakpoints object in settings. Sorts breakpoints\n     * from smaller to larger. It is required in order to proper\n     * matching currently active breakpoint settings.\n     *\n     * @type {Object}\n     */\n    var points = sortBreakpoints(settings.breakpoints);\n\n    /**\n     * Cache initial settings before overwritting.\n     *\n     * @type {Object}\n     */\n    var defaults = _extends({}, settings);\n\n    var Breakpoints = {\n      /**\n       * Matches settings for currectly matching media breakpoint.\n       *\n       * @param {Object} points\n       * @returns {Object}\n       */\n      match: function match(points) {\n        if (typeof window.matchMedia !== 'undefined') {\n          for (var point in points) {\n            if (points.hasOwnProperty(point)) {\n              if (window.matchMedia('(max-width: ' + point + 'px)').matches) {\n                return points[point];\n              }\n            }\n          }\n        }\n\n        return defaults;\n      }\n    };\n\n    /**\n     * Overwrite instance settings with currently matching breakpoint settings.\n     * This happens right after component initialization.\n     */\n    _extends(settings, Breakpoints.match(points));\n\n    /**\n     * Update glide with settings of matched brekpoint:\n     * - window resize to update slider\n     */\n    Binder.on('resize', window, throttle(function () {\n      Glide.settings = mergeOptions(settings, Breakpoints.match(points));\n    }, Glide.settings.throttle));\n\n    /**\n     * Resort and update default settings:\n     * - on reinit via API, so breakpoint matching will be performed with options\n     */\n    Events.on('update', function () {\n      points = sortBreakpoints(points);\n\n      defaults = _extends({}, settings);\n    });\n\n    /**\n     * Unbind resize listener:\n     * - on destroying, to bring markup to its initial state\n     */\n    Events.on('destroy', function () {\n      Binder.off('resize', window);\n    });\n\n    return Breakpoints;\n  }\n\n  var COMPONENTS = {\n    // Required\n    Html: Html,\n    Translate: Translate,\n    Transition: Transition,\n    Direction: Direction,\n    Peek: Peek,\n    Sizes: Sizes,\n    Gaps: Gaps,\n    Move: Move,\n    Clones: Clones,\n    Resize: Resize,\n    Build: Build,\n    Run: Run,\n\n    // Optional\n    Swipe: Swipe,\n    Images: Images,\n    Anchors: Anchors,\n    Controls: Controls,\n    Keyboard: Keyboard,\n    Autoplay: Autoplay,\n    Breakpoints: Breakpoints\n  };\n\n  var Glide$1 = function (_Core) {\n    inherits(Glide$$1, _Core);\n\n    function Glide$$1() {\n      classCallCheck(this, Glide$$1);\n      return possibleConstructorReturn(this, (Glide$$1.__proto__ || Object.getPrototypeOf(Glide$$1)).apply(this, arguments));\n    }\n\n    createClass(Glide$$1, [{\n      key: 'mount',\n      value: function mount() {\n        var extensions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n        return get(Glide$$1.prototype.__proto__ || Object.getPrototypeOf(Glide$$1.prototype), 'mount', this).call(this, _extends({}, COMPONENTS, extensions));\n      }\n    }]);\n    return Glide$$1;\n  }(Glide);\n\n  return Glide$1;\n\n})));\n","/*! npm.im/object-fit-images 3.2.4 */\n'use strict';\n\nvar OFI = 'bfred-it:object-fit-images';\nvar propRegex = /(object-fit|object-position)\\s*:\\s*([-.\\w\\s%]+)/g;\nvar testImg = typeof Image === 'undefined' ? {style: {'object-position': 1}} : new Image();\nvar supportsObjectFit = 'object-fit' in testImg.style;\nvar supportsObjectPosition = 'object-position' in testImg.style;\nvar supportsOFI = 'background-size' in testImg.style;\nvar supportsCurrentSrc = typeof testImg.currentSrc === 'string';\nvar nativeGetAttribute = testImg.getAttribute;\nvar nativeSetAttribute = testImg.setAttribute;\nvar autoModeEnabled = false;\n\nfunction createPlaceholder(w, h) {\n\treturn (\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='\" + w + \"' height='\" + h + \"'%3E%3C/svg%3E\");\n}\n\nfunction polyfillCurrentSrc(el) {\n\tif (el.srcset && !supportsCurrentSrc && window.picturefill) {\n\t\tvar pf = window.picturefill._;\n\t\t// parse srcset with picturefill where currentSrc isn't available\n\t\tif (!el[pf.ns] || !el[pf.ns].evaled) {\n\t\t\t// force synchronous srcset parsing\n\t\t\tpf.fillImg(el, {reselect: true});\n\t\t}\n\n\t\tif (!el[pf.ns].curSrc) {\n\t\t\t// force picturefill to parse srcset\n\t\t\tel[pf.ns].supported = false;\n\t\t\tpf.fillImg(el, {reselect: true});\n\t\t}\n\n\t\t// retrieve parsed currentSrc, if any\n\t\tel.currentSrc = el[pf.ns].curSrc || el.src;\n\t}\n}\n\nfunction getStyle(el) {\n\tvar style = getComputedStyle(el).fontFamily;\n\tvar parsed;\n\tvar props = {};\n\twhile ((parsed = propRegex.exec(style)) !== null) {\n\t\tprops[parsed[1]] = parsed[2];\n\t}\n\treturn props;\n}\n\nfunction setPlaceholder(img, width, height) {\n\t// Default: fill width, no height\n\tvar placeholder = createPlaceholder(width || 1, height || 0);\n\n\t// Only set placeholder if it's different\n\tif (nativeGetAttribute.call(img, 'src') !== placeholder) {\n\t\tnativeSetAttribute.call(img, 'src', placeholder);\n\t}\n}\n\nfunction onImageReady(img, callback) {\n\t// naturalWidth is only available when the image headers are loaded,\n\t// this loop will poll it every 100ms.\n\tif (img.naturalWidth) {\n\t\tcallback(img);\n\t} else {\n\t\tsetTimeout(onImageReady, 100, img, callback);\n\t}\n}\n\nfunction fixOne(el) {\n\tvar style = getStyle(el);\n\tvar ofi = el[OFI];\n\tstyle['object-fit'] = style['object-fit'] || 'fill'; // default value\n\n\t// Avoid running where unnecessary, unless OFI had already done its deed\n\tif (!ofi.img) {\n\t\t// fill is the default behavior so no action is necessary\n\t\tif (style['object-fit'] === 'fill') {\n\t\t\treturn;\n\t\t}\n\n\t\t// Where object-fit is supported and object-position isn't (Safari < 10)\n\t\tif (\n\t\t\t!ofi.skipTest && // unless user wants to apply regardless of browser support\n\t\t\tsupportsObjectFit && // if browser already supports object-fit\n\t\t\t!style['object-position'] // unless object-position is used\n\t\t) {\n\t\t\treturn;\n\t\t}\n\t}\n\n\t// keep a clone in memory while resetting the original to a blank\n\tif (!ofi.img) {\n\t\tofi.img = new Image(el.width, el.height);\n\t\tofi.img.srcset = nativeGetAttribute.call(el, \"data-ofi-srcset\") || el.srcset;\n\t\tofi.img.src = nativeGetAttribute.call(el, \"data-ofi-src\") || el.src;\n\n\t\t// preserve for any future cloneNode calls\n\t\t// https://github.com/bfred-it/object-fit-images/issues/53\n\t\tnativeSetAttribute.call(el, \"data-ofi-src\", el.src);\n\t\tif (el.srcset) {\n\t\t\tnativeSetAttribute.call(el, \"data-ofi-srcset\", el.srcset);\n\t\t}\n\n\t\tsetPlaceholder(el, el.naturalWidth || el.width, el.naturalHeight || el.height);\n\n\t\t// remove srcset because it overrides src\n\t\tif (el.srcset) {\n\t\t\tel.srcset = '';\n\t\t}\n\t\ttry {\n\t\t\tkeepSrcUsable(el);\n\t\t} catch (err) {\n\t\t\tif (window.console) {\n\t\t\t\tconsole.warn('https://bit.ly/ofi-old-browser');\n\t\t\t}\n\t\t}\n\t}\n\n\tpolyfillCurrentSrc(ofi.img);\n\n\tel.style.backgroundImage = \"url(\\\"\" + ((ofi.img.currentSrc || ofi.img.src).replace(/\"/g, '\\\\\"')) + \"\\\")\";\n\tel.style.backgroundPosition = style['object-position'] || 'center';\n\tel.style.backgroundRepeat = 'no-repeat';\n\tel.style.backgroundOrigin = 'content-box';\n\n\tif (/scale-down/.test(style['object-fit'])) {\n\t\tonImageReady(ofi.img, function () {\n\t\t\tif (ofi.img.naturalWidth > el.width || ofi.img.naturalHeight > el.height) {\n\t\t\t\tel.style.backgroundSize = 'contain';\n\t\t\t} else {\n\t\t\t\tel.style.backgroundSize = 'auto';\n\t\t\t}\n\t\t});\n\t} else {\n\t\tel.style.backgroundSize = style['object-fit'].replace('none', 'auto').replace('fill', '100% 100%');\n\t}\n\n\tonImageReady(ofi.img, function (img) {\n\t\tsetPlaceholder(el, img.naturalWidth, img.naturalHeight);\n\t});\n}\n\nfunction keepSrcUsable(el) {\n\tvar descriptors = {\n\t\tget: function get(prop) {\n\t\t\treturn el[OFI].img[prop ? prop : 'src'];\n\t\t},\n\t\tset: function set(value, prop) {\n\t\t\tel[OFI].img[prop ? prop : 'src'] = value;\n\t\t\tnativeSetAttribute.call(el, (\"data-ofi-\" + prop), value); // preserve for any future cloneNode\n\t\t\tfixOne(el);\n\t\t\treturn value;\n\t\t}\n\t};\n\tObject.defineProperty(el, 'src', descriptors);\n\tObject.defineProperty(el, 'currentSrc', {\n\t\tget: function () { return descriptors.get('currentSrc'); }\n\t});\n\tObject.defineProperty(el, 'srcset', {\n\t\tget: function () { return descriptors.get('srcset'); },\n\t\tset: function (ss) { return descriptors.set(ss, 'srcset'); }\n\t});\n}\n\nfunction hijackAttributes() {\n\tfunction getOfiImageMaybe(el, name) {\n\t\treturn el[OFI] && el[OFI].img && (name === 'src' || name === 'srcset') ? el[OFI].img : el;\n\t}\n\tif (!supportsObjectPosition) {\n\t\tHTMLImageElement.prototype.getAttribute = function (name) {\n\t\t\treturn nativeGetAttribute.call(getOfiImageMaybe(this, name), name);\n\t\t};\n\n\t\tHTMLImageElement.prototype.setAttribute = function (name, value) {\n\t\t\treturn nativeSetAttribute.call(getOfiImageMaybe(this, name), name, String(value));\n\t\t};\n\t}\n}\n\nfunction fix(imgs, opts) {\n\tvar startAutoMode = !autoModeEnabled && !imgs;\n\topts = opts || {};\n\timgs = imgs || 'img';\n\n\tif ((supportsObjectPosition && !opts.skipTest) || !supportsOFI) {\n\t\treturn false;\n\t}\n\n\t// use imgs as a selector or just select all images\n\tif (imgs === 'img') {\n\t\timgs = document.getElementsByTagName('img');\n\t} else if (typeof imgs === 'string') {\n\t\timgs = document.querySelectorAll(imgs);\n\t} else if (!('length' in imgs)) {\n\t\timgs = [imgs];\n\t}\n\n\t// apply fix to all\n\tfor (var i = 0; i < imgs.length; i++) {\n\t\timgs[i][OFI] = imgs[i][OFI] || {\n\t\t\tskipTest: opts.skipTest\n\t\t};\n\t\tfixOne(imgs[i]);\n\t}\n\n\tif (startAutoMode) {\n\t\tdocument.body.addEventListener('load', function (e) {\n\t\t\tif (e.target.tagName === 'IMG') {\n\t\t\t\tfix(e.target, {\n\t\t\t\t\tskipTest: opts.skipTest\n\t\t\t\t});\n\t\t\t}\n\t\t}, true);\n\t\tautoModeEnabled = true;\n\t\timgs = 'img'; // reset to a generic selector for watchMQ\n\t}\n\n\t// if requested, watch media queries for object-fit change\n\tif (opts.watchMQ) {\n\t\twindow.addEventListener('resize', fix.bind(null, imgs, {\n\t\t\tskipTest: opts.skipTest\n\t\t}));\n\t}\n}\n\nfix.supportsObjectFit = supportsObjectFit;\nfix.supportsObjectPosition = supportsObjectPosition;\n\nhijackAttributes();\n\nmodule.exports = fix;\n","(function () {\n\t'use strict';\n\n\t//////////////\n\t// Constructor\n\tvar SleekMap = function (mapEl, config) {\n\t\tthis.mapEl = mapEl;\n\t\tthis.config = config;\n\t\tthis.markers = [];\n\t\tthis.kmlLayers = [];\n\n\t\t// We will most likely need an info window\n\t\tthis.infoWindow = new google.maps.InfoWindow();\n\n\t\t// Create bounds\n\t\tthis.markerBounds = new google.maps.LatLngBounds();\n\n\t\t// Basic map options\n\t\tthis.mapOptions = {\n\t\t\tzoom: this.config.zoom || 2,\n\t\t\tscrollWheel: this.config.scrollWheel || false,\n\t\t\tcenter: this.config.center || {lat: 0, lng: 0},\n\t\t\tmapTypeControl: false, // Will be true if more than one map type is specified\n\t\t\tstreetViewControl: this.config.streetViewControl || false,\n\t\t\tstyles: this.config.styles || null\n\t\t};\n\n\t\t// Add map types\n\t\tvar firstMapType = null;\n\n\t\tif (this.config.mapTypes && this.config.mapTypes.length) {\n\t\t\t// Just one type\n\t\t\tif (this.config.mapTypes.length === 1) {\n\t\t\t\t// Just a string, assume it's an existing mapTypeId\n\t\t\t\tif (typeof this.config.mapTypes[0] === 'string') {\n\t\t\t\t\tthis.mapOptions.mapTypeId = this.config.mapTypes[0];\n\t\t\t\t}\n\t\t\t\t// Not a string - assumed to be a style object\n\t\t\t\telse {\n\t\t\t\t\tthis.mapOptions.styles = this.config.mapTypes[0].styles;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Several types\n\t\t\telse {\n\t\t\t\tvar mapTypeIds = [];\n\n\t\t\t\t// Show map type controls\n\t\t\t\tthis.mapOptions.mapTypeControl = true;\n\n\t\t\t\t// Add all types\n\t\t\t\tfor (var i = 0; i < this.config.mapTypes.length; i++) {\n\t\t\t\t\tif (typeof this.config.mapTypes[i] === 'string') {\n\t\t\t\t\t\tmapTypeIds.push(this.config.mapTypes[i]);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tmapTypeIds.push('styled_map_' + this.config.mapTypes[i].name.replace(/\\W/g, '_'));\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfirstMapType = mapTypeIds[0];\n\t\t\t\tthis.mapOptions.mapTypeControlOptions = {\n\t\t\t\t\tmapTypeIds: mapTypeIds\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\t// Create the map\n\t\tthis.map = new google.maps.Map(this.mapEl, this.mapOptions);\n\n\t\t// Now create the styled map types (because we need the map to do so)\n\t\tif (this.config.mapTypes && this.config.mapTypes.length > 1) {\n\t\t\tfor (var i = 0; i < this.config.mapTypes.length; i++) {\n\t\t\t\tif (typeof this.config.mapTypes[i] !== 'string') {\n\t\t\t\t\tthis.map.mapTypes.set(\n\t\t\t\t\t\t'styled_map_' + this.config.mapTypes[i].name.replace(/\\W/g, '_'),\n\t\t\t\t\t\tnew google.maps.StyledMapType(this.config.mapTypes[i].styles, {name: this.config.mapTypes[i].name})\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Finally set the first map type as active\n\t\tif (firstMapType) {\n\t\t\tthis.map.setMapTypeId(firstMapType);\n\t\t}\n\n\t\t// Geolocation\n\t\tif (this.config.geolocation) {\n\t\t\tthis.addGeolocation();\n\t\t}\n\n\t\t// Markers\n\t\tif (this.config.markers && this.config.markers.length) {\n\t\t\tthis.addMarkers(this.config.markers);\n\t\t}\n\n\t\t// KML Layers\n\t\tif (this.config.kmlLayers && this.config.kmlLayers.length) {\n\t\t\tthis.addKmlLayers(this.config.kmlLayers);\n\t\t}\n\t};\n\n\t///////////////\n\t// Geolocation\n\tSleekMap.prototype.addGeolocation = function () {\n\t\tvar t = this;\n\n\t\tthis.geolocationControl = document.createElement('div');\n\t\tthis.geolocationControl.classList.add('sleek-map-geolocation');\n\t\tthis.geolocationControl.addEventListener('click', function () {\n\t\t\tif (!t.geolocationMarker) {\n\t\t\t\tt.watchPosition();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tt.map.panTo(t.geolocationMarker.getPosition());\n\t\t\t}\n\t\t});\n\n\t\tthis.map.controls[google.maps.ControlPosition.RIGHT_BOTTOM].push(this.geolocationControl);\n\t};\n\n\t// Setup geolocation watching\n\tSleekMap.prototype.watchPosition = function () {\n\t\tvar t = this;\n\n\t\tthis.geolocationControl.classList.remove('error');\n\t\tthis.geolocationControl.classList.add('loading');\n\n\t\tthis.geolocationId = navigator.geolocation.watchPosition(\n\t\t\tfunction (position) {\n\t\t\t\tt.geolocationControl.classList.remove('error');\n\t\t\t\tt.geolocationControl.classList.remove('loading');\n\n\t\t\t\tif (t.geolocationMarker) {\n\t\t\t\t\tt.updateGeolocationMarker({\n\t\t\t\t\t\tlat: position.coords.latitude,\n\t\t\t\t\t\tlng: position.coords.longitude\n\t\t\t\t\t}, position.coords.accuracy);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tt.addGeolocationMarker({\n\t\t\t\t\t\tlat: position.coords.latitude,\n\t\t\t\t\t\tlng: position.coords.longitude\n\t\t\t\t\t}, position.coords.accuracy);\n\n\t\t\t\t\tt.map.panTo({\n\t\t\t\t\t\tlat: position.coords.latitude,\n\t\t\t\t\t\tlng: position.coords.longitude\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t\tfunction (error) {\n\t\t\t\tt.geolocationControl.classList.remove('loading');\n\t\t\t\tt.geolocationControl.classList.add('error');\n\t\t\t},\n\t\t\t{\n\t\t\t\ttimeout: this.config.geolocation.timeout || 5000,\n\t\t\t\tmaximumAge: this.config.geolocation.maximumAge || 0,\n\t\t\t\tenableHighAccuracy: this.config.geolocation.enableHighAccuracy || false\n\t\t\t}\n\t\t);\n\t};\n\n\t// Create marker and accuracy circle\n\tSleekMap.prototype.addGeolocationMarker = function (position, radius) {\n\t\tthis.geolocationMarker = new google.maps.Marker({\n\t\t\tmap: this.map,\n\t\t\tposition: position,\n\t\t\ticon: {\n\t\t\t\tpath: google.maps.SymbolPath.CIRCLE,\n\t\t\t\tscale: 5,\n\t\t\t\tfillColor: '#1758ce',\n\t\t\t\tfillOpacity: 1,\n\t\t\t\tstrokeColor: '#1758ce',\n\t\t\t\tstrokeOpacity: 1,\n\t\t\t\tstrokeWeight: 0\n\t\t\t}\n\t\t});\n\t\tthis.geolocationAccuracy = new google.maps.Circle({\n\t\t\tmap: this.map,\n\t\t\tstrokeColor: '#1758ce',\n\t\t\tstrokeOpacity: 1,\n\t\t\tstrokeWeight: 1,\n\t\t\tfillColor: '#1758ce',\n\t\t\tfillOpacity: 0.35,\n\t\t\tcenter: position,\n\t\t\tradius: radius\n\t\t});\n\t};\n\n\t// Update marker and accuracy circle\n\tSleekMap.prototype.updateGeolocationMarker = function (position, radius) {\n\t\tthis.geolocationMarker.setPosition(position);\n\t\tthis.geolocationAccuracy.setCenter(position);\n\t\tthis.geolocationAccuracy.setRadius(radius);\n\t};\n\n\t// Add markers\n\tSleekMap.prototype.addMarkers = function (markers) {\n\t\tvar t = this;\n\t\tvar defaultIconSize = 32;\n\n\t\t// Go through all the markers\n\t\tmarkers.forEach(function (marker) {\n\t\t\tvar args = {\n\t\t\t\tmap: t.map,\n\t\t\t\tposition: {\n\t\t\t\t\tlat: marker.lat,\n\t\t\t\t\tlng: marker.lng\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// Check for custom icon\n\t\t\tif (marker.icon) {\n\t\t\t\targs.icon = {\n\t\t\t\t\turl: marker.icon.url\n\t\t\t\t};\n\n\t\t\t\t// Icon size is also specified\n\t\t\t\tif (marker.icon.size) {\n\t\t\t\t\t// As object\n\t\t\t\t\tif (typeof marker.icon.size === 'object') {\n\t\t\t\t\t\targs.icon.scaledSize = marker.icon.size;\n\t\t\t\t\t}\n\t\t\t\t\t// As single value\n\t\t\t\t\telse {\n\t\t\t\t\t\targs.icon.scaledSize = {\n\t\t\t\t\t\t\twidth: marker.icon.size,\n\t\t\t\t\t\t\theight: marker.icon.size\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Default size\n\t\t\t\telse {\n\t\t\t\t\targs.icon.scaledSize = {\n\t\t\t\t\t\twidth: defaultIconSize,\n\t\t\t\t\t\theight: defaultIconSize\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\t// Icon anchor also specified\n\t\t\t\tif (marker.icon.anchor) {\n\t\t\t\t\t// As object\n\t\t\t\t\tif (typeof marker.icon.anchor === 'object') {\n\t\t\t\t\t\targs.icon.anchor = marker.icon.anchor;\n\t\t\t\t\t}\n\t\t\t\t\t// As single value\n\t\t\t\t\telse {\n\t\t\t\t\t\targs.icon.anchor = {\n\t\t\t\t\t\t\tx: marker.icon.anchor,\n\t\t\t\t\t\t\ty: marker.icon.anchor\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Default anchor\n\t\t\t\telse {\n\t\t\t\t\targs.icon.anchor = {\n\t\t\t\t\t\tx: defaultIconSize / 2,\n\t\t\t\t\t\ty: defaultIconSize / 2\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Create marker\n\t\t\tvar gMarker = new google.maps.Marker(args);\n\n\t\t\t// Custom properties\n\t\t\tif (marker.customProperties) {\n\t\t\t\tgMarker.customProperties = marker.customProperties;\n\t\t\t}\n\n\t\t\t// Info window\n\t\t\tif (marker.infoWindow) {\n\t\t\t\tgMarker.addListener('click', function () {\n\t\t\t\t\tt.infoWindow.setContent('<div class=\"google-map-info-window\">' + marker.infoWindow + '</div>');\n\t\t\t\t\tt.infoWindow.open(t.map, gMarker);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tt.markers.push(gMarker);\n\t\t\tt.markerBounds.extend(gMarker.getPosition());\n\t\t});\n\n\t\t// Center on markers\n\t\tif (this.markers.length) {\n\t\t\tif (this.markers.length === 1) {\n\t\t\t\tthis.map.setCenter(this.markers[0].getPosition());\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.map.fitBounds(this.markerBounds);\n\t\t\t}\n\t\t}\n\n\t\t// Center on markers on map type change\n\t\tgoogle.maps.event.addListener(this.map, 'maptypeid_changed', function () {\n\t\t\tif (t.markers.length === 1) {\n\t\t\t\tt.map.setCenter(t.markers[0].getPosition());\n\t\t\t}\n\t\t\telse {\n\t\t\t\tt.map.fitBounds(t.markerBounds);\n\t\t\t}\n\t\t});\n\t};\n\n\t// Add KML layers\n\tSleekMap.prototype.addKmlLayers = function (layers) {\n\t\tvar t = this;\n\n\t\t// Add each layer\n\t\tlayers.forEach(function (layer) {\n\t\t\tvar kmlLayer = new google.maps.KmlLayer({\n\t\t\t\tmap: t.map,\n\t\t\t\turl: layer.url\n\t\t\t});\n\n\t\t\tif (layer.customProperties) {\n\t\t\t\tkmlLayer.customProperties = layer.customProperties;\n\t\t\t}\n\n\t\t\tt.kmlLayers.push(kmlLayer);\n\t\t});\n\n\t\t// Center on KML files on map type change\n\t\tgoogle.maps.event.addListener(this.map, 'maptypeid_changed', function () {\n\t\t\tt.map.fitBounds(t.kmlLayers[0].getDefaultViewport());\n\t\t});\n\t};\n\n\t//////////////////////////////////////////\n\t// Parse a map element for data-attributes\n\tSleekMap.parseMapEl = function (mapEl, mapStyles) {\n\t\tvar config = {};\n\n\t\t// Zoom\n\t\tif (mapEl.dataset.zoom) {\n\t\t\tconfig.zoom = parseInt(mapEl.dataset.zoom);\n\t\t}\n\n\t\t// Center\n\t\tif (mapEl.dataset.lat && mapEl.dataset.lng) {\n\t\t\tconfig.center = {\n\t\t\t\tlat: parseFloat(mapEl.dataset.lat),\n\t\t\t\tlng: parseFloat(mapEl.dataset.lng)\n\t\t\t};\n\t\t}\n\n\t\t// Styles can be a string or JSON array\n\t\tif (mapEl.dataset.styles) {\n\t\t\ttry {\n\t\t\t\tconfig.styles = JSON.parse(mapEl.dataset.styles);\n\t\t\t}\n\t\t\tcatch (e) {\n\t\t\t\t// If styles is just a string - check if it's defined in mapStyles\n\t\t\t\tif (typeof mapStyles[mapEl.dataset.styles] !== 'undefined') {\n\t\t\t\t\tconfig.styles = JSON.parse(mapStyles[mapEl.dataset.styles]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Types can be either string or JSON array\n\t\tif (mapEl.dataset.mapTypes) {\n\t\t\ttry {\n\t\t\t\tconfig.mapTypes = JSON.parse(mapEl.dataset.mapTypes);\n\n\t\t\t\t// If map type styles is just a string - map it to the mapStyles\n\t\t\t\tfor (var i = 0; i < config.mapTypes.length; i++) {\n\t\t\t\t\tif (typeof config.mapTypes[i].styles === 'string' && typeof mapStyles[config.mapTypes[i].styles] !== 'undefined') {\n\t\t\t\t\t\tconfig.mapTypes[i].styles = JSON.parse(mapStyles[config.mapTypes[i].styles]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (e) {\n\t\t\t\tconfig.mapTypes = [mapEl.dataset.mapTypes];\n\t\t\t}\n\t\t}\n\n\t\t// Geolocation can be either empty (indicating true) or JSON object\n\t\tif (typeof mapEl.dataset.geolocation !== 'undefined') {\n\t\t\ttry {\n\t\t\t\tconfig.geolocation = JSON.parse(mapEl.dataset.geolocation);\n\t\t\t}\n\t\t\tcatch (e) {\n\t\t\t\tconfig.geolocation = true;\n\t\t\t}\n\t\t}\n\n\t\t// KML Layers can be either string or JSON array\n\t\tif (mapEl.dataset.kmlLayers) {\n\t\t\ttry {\n\t\t\t\tconfig.kmlLayers = JSON.parse(mapEl.dataset.kmlLayers);\n\n\t\t\t\t// If an array of URLs is passed in - convert to valid object\n\t\t\t\tfor (var i = 0; i < config.kmlLayers.length; i++) {\n\t\t\t\t\tif (typeof config.kmlLayers[i] === 'string') {\n\t\t\t\t\t\tconfig.kmlLayers[i] = {\n\t\t\t\t\t\t\turl: config.kmlLayers[i]\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (e) {\n\t\t\t\tconfig.kmlLayers = [{\n\t\t\t\t\turl: mapEl.dataset.kmlLayers\n\t\t\t\t}];\n\t\t\t}\n\t\t}\n\n\t\t// Markers are stored as direct children of the mapEl\n\t\tif (mapEl.children.length) {\n\t\t\tvar markers = [];\n\n\t\t\tfor (var i = 0; i < mapEl.children.length; i++) {\n\t\t\t\tif (mapEl.children[i].dataset.lat && mapEl.children[i].dataset.lng) {\n\t\t\t\t\tvar marker = {\n\t\t\t\t\t\tlat: parseFloat(mapEl.children[i].dataset.lat),\n\t\t\t\t\t\tlng: parseFloat(mapEl.children[i].dataset.lng)\n\t\t\t\t\t};\n\n\t\t\t\t\t// Icon can be string (src) or JSON object\n\t\t\t\t\tif (mapEl.children[i].dataset.icon) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tmarker.icon = JSON.parse(mapEl.children[i].dataset.icon);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcatch (e) {\n\t\t\t\t\t\t\tmarker.icon = {\n\t\t\t\t\t\t\t\turl: mapEl.children[i].dataset.icon\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Custom properties\n\t\t\t\t\tif (mapEl.children[i].dataset.customProperties) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tmarker.customProperties = JSON.parse(mapEl.children[i].dataset.customProperties);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcatch (e) {\n\t\t\t\t\t\t\tmarker.customProperties = mapEl.children[i].dataset.customProperties;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Info window?\n\t\t\t\t\tif (mapEl.children[i].innerHTML.length) {\n\t\t\t\t\t\tmarker.infoWindow = mapEl.children[i].innerHTML;\n\t\t\t\t\t}\n\n\t\t\t\t\tmarkers.push(marker);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (markers.length) {\n\t\t\t\tconfig.markers = markers;\n\t\t\t}\n\t\t}\n\n\t\treturn config;\n\t};\n\n\tmodule.exports = SleekMap;\n})();\n","(function (factory) {\n\t'use strict';\n\n\tif (typeof module === 'object' && typeof module.exports === 'object') {\n\t\tmodule.exports = factory((typeof window !== \"undefined\" ? window['jQuery'] : typeof global !== \"undefined\" ? global['jQuery'] : null));\n\t}\n\telse {\n\t\tfactory(jQuery);\n\t}\n})(function ($) {\n\t'use strict';\n\n\t$.fn.smoothScroll = function (conf) {\n\t\tvar config = $.extend({\n\t\t\tduration: 600,\n\t\t\toffset: 0\n\t\t}, conf);\n\n\t\treturn this.each(function () {\n\t\t\tvar trigger = $(this);\n\t\t\tvar href = trigger.attr('href');\n\t\t\tvar targetId = href.substr(href.indexOf('#')).substr(1);\n\t\t\tvar target = document.getElementById(targetId);\n\n\t\t\tif (target) {\n\t\t\t\ttrigger.click(function (e) {\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t\te.preventDefault();\n\n\t\t\t\t\tvar targetBCT = target.getBoundingClientRect();\n\t\t\t\t\tvar st = $(document).scrollTop();\n\n\t\t\t\t\twindow.location.hash = '#' + targetId; // Bump :target\n\n\t\t\t\t\t$(document).scrollTop(st);\n\n\t\t\t\t\t$('html, body').animate({scrollTop: targetBCT.top + st + config.offset}, config.duration);\n\t\t\t\t});\n\t\t\t}\n\t\t\telse if (targetId == 'top') {\n\t\t\t\ttrigger.click(function (e) {\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t\te.preventDefault();\n\n\t\t\t\t\t$('html, body').animate({scrollTop: 0}, config.duration);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t};\n});\n","(function (factory) {\n\t'use strict';\n\n\tif (typeof module === 'object' && typeof module.exports === 'object') {\n\t\tmodule.exports = factory((typeof window !== \"undefined\" ? window['jQuery'] : typeof global !== \"undefined\" ? global['jQuery'] : null));\n\t}\n\telse {\n\t\tfactory(jQuery);\n\t}\n})(function ($) {\n\t'use strict';\n\n\t$.fn.toggleHash = function (conf) {\n\t\tconf = conf || {};\n\n\t\tvar config = {\n\t\t\tonAdd: conf.onAdd || function () {},\n\t\t\tonRemove: conf.onRemove || function () {}\n\t\t};\n\n\t\treturn this.each(function () {\n\t\t\tvar t = $(this);\n\t\t\tvar tHash = t.attr('href');\n\n\t\t\t// Trigger callback on hash change (NOTE: Collides with other libs like smooth scroll...)\n\t\t/*\t$(window).on('hashchange', function () {\n\t\t\t\tif (window.location.hash == tHash) {\n\t\t\t\t\tconfig.onAdd(tHash);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconfig.onRemove(tHash);\n\t\t\t\t}\n\t\t\t}); */\n\n\t\t\t// Toggle hash on click\n\t\t\tt.click(function (e) {\n\t\t\t\te.preventDefault();\n\n\t\t\t\tvar clicked = $(this);\n\t\t\t\tvar clickedHash = clicked.attr('href');\n\t\t\t\tvar currHash = window.location.hash;\n\n\t\t\t\t// We're currently on this hash - clear it\n\t\t\t\tif (clickedHash == currHash) {\n\t\t\t\t\tvar st = $(document).scrollTop();\n\n\t\t\t\t\twindow.location.hash = '#';\n\n\t\t\t\t\t$(document).scrollTop(st);\n\n\t\t\t\t\tif ('replaceState' in window.history) {\n\t\t\t\t\t\twindow.history.replaceState('', document.title, window.location.pathname + window.location.search);\n\t\t\t\t\t}\n\n\t\t\t\t\tconfig.onRemove(clickedHash);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tvar st = $(document).scrollTop();\n\n\t\t\t\t\twindow.location.hash = clickedHash;\n\n\t\t\t\t\t$(document).scrollTop(st);\n\n\t\t\t\t\tconfig.onAdd(clickedHash);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t};\n});\n","require('./all.js');require('./cookie-consent.js');require('./google-map.js');require('./object-fit-polyfill.js');require('./popup.js');require('./slideshow.js');require('./smooth-scroll.js');require('./toggle-hash.js');\n;\n","(function () {\n\t'use strict';\n\n\tif (typeof SLEEK_COOKIE_CONSENT == 'undefined') {\n\t\treturn;\n\t}\n\n\tvar acceptsCookies = window.localStorage.getItem('cookie_consent');\n\n\tif (!acceptsCookies) {\n\t\tvar el = document.createElement('div');\n\n\t\tel.id = 'cookie-consent';\n\t\tel.innerHTML = SLEEK_COOKIE_CONSENT;\n\n\t\tdocument.body.appendChild(el);\n\n\t\tel.querySelector('a.close').addEventListener('click', function (e) {\n\t\t\te.preventDefault();\n\t\t\twindow.localStorage.setItem('cookie_consent', true);\n\t\t\tel.parentNode.removeChild(el);\n\t\t});\n\t}\n})();\n","(function () {\n\t'use strict';\n\n\tvar $ = (typeof window !== \"undefined\" ? window['jQuery'] : typeof global !== \"undefined\" ? global['jQuery'] : null);\n\tvar SleekMap = require('sleek-map');\n\n\t// Make sure we have an API key\n\tif (typeof gmInit === 'undefined' || typeof SLEEK_CONFIG === 'undefined' || typeof SLEEK_CONFIG.GOOGLE_MAPS_API_KEY === 'undefined') {\n\t\tconsole.log('No Google Maps API key found');\n\n\t\treturn;\n\t}\n\n\t// When Google Maps has loaded\n\tgmInit(function () {\n\t\t$('.google-map').each(function () {\n\t\t\tthis.sleekMap = new SleekMap(this, SleekMap.parseMapEl(this));\n\t\t});\n\t});\n})();\n","(function () {\n\t'use strict';\n\n\tvar ofi = require('object-fit-images');\n\n\tofi();\n})();\n","(function () {\n\t'use strict';\n\n\tvar $ = (typeof window !== \"undefined\" ? window['jQuery'] : typeof global !== \"undefined\" ? global['jQuery'] : null);\n\n\t// Closes all popups by clearing hash\n\tvar closePopups = function () {\n\t\tvar st = $(document).scrollTop(); // Store scroll position\n\t\twindow.location.hash = '#'; // Bump CSS :target styling\n\t\t$(document).scrollTop(st); // Restore scroll position\n\n\t\t// Update URL\n\t\tif ('replaceState' in window.history) {\n\t\t\twindow.history.pushState('', document.title, window.location.pathname + window.location.search);\n\t\t}\n\t};\n\n\t// Hook up close clicks\n\t$('.popup, .popup__close').click(function (e) {\n\t\t// Only direct clicks\n\t\tif (e.target == this) {\n\t\t\te.preventDefault();\n\t\t\tclosePopups();\n\t\t}\n\t});\n\n\t// Popup templates\n\t$('[data-popup-template]').click(function () {\n\t\tvar clicked = $(this);\n\t\tvar popupId = clicked.attr('href').substr(1);\n\t\tvar templateId = clicked.attr('data-popup-template');\n\n\t\t$('#' + popupId).find('div.popup-template-content').html($('#' + templateId).html());\n\t});\n})();\n","(function () {\n\t'use strict';\n\n\tvar $ = (typeof window !== \"undefined\" ? window['jQuery'] : typeof global !== \"undefined\" ? global['jQuery'] : null);\n\tvar Glide = require('@glidejs/glide');\n\n\t// Wrap WP galleries in [data-slideshow] (TODO: Should be optional!)\n\t$('div.gallery').each(function () {\n\t\tvar numCols = 1;\n\t\tvar gallery = $(this).addClass('is-slideshow');\n\t\tvar colClass = gallery.attr('class').split(' ').filter(function (val) {\n\t\t\treturn val.indexOf('gallery--cols-') != -1;\n\t\t});\n\n\t\tif (colClass && colClass.length) {\n\t\t\tnumCols = colClass[0].replace('gallery--cols-', '');\n\t\t}\n\n\t\tgallery.wrapInner('<div data-slideshow=\"' + numCols + '\"></div>');\n\t});\n\n\t// Modify all [data-slideshow] to work with Glide\n\t$('[data-slideshow]').each(function () {\n\t\t// Wrap [data-slideshow] in needed divs\n\t\tvar wrap = $(this);\n\t\tvar perPage = wrap.data('slideshow') || 1;\n\t\tvar outer = $('<div class=\"glide\"><div class=\"glide__track\" data-glide-el=\"track\"></div></div>').insertBefore(wrap);\n\t\tvar track = outer.find('div.glide__track');\n\n\t\twrap.addClass('glide__slides').children().addClass('glide__slide');\n\t\ttrack.append(wrap);\n\n\t\t// Create buttons\n\t\tvar buttons = $('<div data-glide-el=\"controls\"><a data-glide-dir=\"<\" class=\"slideshow-prev\">&larr;</a><a data-glide-dir=\">\" class=\"slideshow-next\">&rarr;</a></div>').appendTo(outer);\n\t\tvar nav = '<div data-glide-el=\"controls[nav]\" class=\"slideshow-pages\">';\n\n\t\twrap.children().each(function (i) {\n\t\t\tnav += '<a data-glide-dir=\"=' + i + '\">' + i + '</a>';\n\t\t});\n\n\t\tnav += '</div>';\n\n\t\tnav = $(nav).appendTo(outer);\n\n\t\t// Move potential classes\n\t\tif (wrap.is('.slideshow--white')) {\n\t\t\touter.addClass('slideshow--white');\n\t\t}\n\n\t\t// Initialize Glide\n\t\tnew Glide(outer[0], {\n\t\t\ttype: 'carousel',\n\t\t\tperView: perPage,\n\t\t\tfocusAt: 'center'\n\t\t}).mount();\n\t});\n})();\n","(function () {\n\t'use strict';\n\n\tvar $ = (typeof window !== \"undefined\" ? window['jQuery'] : typeof global !== \"undefined\" ? global['jQuery'] : null);\n\n\trequire('smooth-scroll');\n\n\t$('[data-smooth-scroll]').smoothScroll();\n})();\n","(function () {\n\t'use strict';\n\n\tvar $ = (typeof window !== \"undefined\" ? window['jQuery'] : typeof global !== \"undefined\" ? global['jQuery'] : null);\n\n\trequire('toggle-hash');\n\n\t$('[data-toggle-hash]').each(function () {\n\t\tvar t = $(this);\n\t\tvar tText = t.text();\n\t\tvar ttText = t.attr('data-toggle-hash');\n\t\tvar hasText = ttText ? true : false;\n\n\t\tttText = ttText ? ttText : tText;\n\n\t\tt.toggleHash({\n\t\t\tonAdd: function (hash) {\n\t\t\t\tif (hasText) {\n\t\t\t\t\tt.text(ttText);\n\t\t\t\t}\n\n\t\t\t\t$(document.documentElement).addClass('hash-active').addClass('hash-active-' + hash.substr(1));\n\t\t\t},\n\t\t\tonRemove: function (hash) {\n\t\t\t\tif (hasText) {\n\t\t\t\t\tt.text(tText);\n\t\t\t\t}\n\n\t\t\t\t$(document.documentElement).removeClass('hash-active').removeClass('hash-active-' + hash.substr(1));\n\t\t\t},\n\t\t});\n\t});\n})();\n"]}